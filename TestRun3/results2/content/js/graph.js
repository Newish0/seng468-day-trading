/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 21934.0, "series": [{"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 2.0], [0.6, 2.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 3.0], [7.7, 3.0], [7.8, 3.0], [7.9, 3.0], [8.0, 3.0], [8.1, 3.0], [8.2, 3.0], [8.3, 3.0], [8.4, 3.0], [8.5, 3.0], [8.6, 3.0], [8.7, 3.0], [8.8, 3.0], [8.9, 3.0], [9.0, 3.0], [9.1, 3.0], [9.2, 3.0], [9.3, 3.0], [9.4, 3.0], [9.5, 3.0], [9.6, 3.0], [9.7, 3.0], [9.8, 3.0], [9.9, 3.0], [10.0, 3.0], [10.1, 3.0], [10.2, 3.0], [10.3, 3.0], [10.4, 3.0], [10.5, 3.0], [10.6, 3.0], [10.7, 3.0], [10.8, 3.0], [10.9, 3.0], [11.0, 3.0], [11.1, 3.0], [11.2, 3.0], [11.3, 3.0], [11.4, 3.0], [11.5, 3.0], [11.6, 3.0], [11.7, 3.0], [11.8, 3.0], [11.9, 3.0], [12.0, 3.0], [12.1, 3.0], [12.2, 3.0], [12.3, 3.0], [12.4, 3.0], [12.5, 3.0], [12.6, 3.0], [12.7, 3.0], [12.8, 3.0], [12.9, 3.0], [13.0, 3.0], [13.1, 3.0], [13.2, 3.0], [13.3, 3.0], [13.4, 3.0], [13.5, 3.0], [13.6, 3.0], [13.7, 3.0], [13.8, 3.0], [13.9, 3.0], [14.0, 3.0], [14.1, 3.0], [14.2, 3.0], [14.3, 3.0], [14.4, 3.0], [14.5, 3.0], [14.6, 3.0], [14.7, 3.0], [14.8, 3.0], [14.9, 3.0], [15.0, 3.0], [15.1, 3.0], [15.2, 3.0], [15.3, 3.0], [15.4, 3.0], [15.5, 3.0], [15.6, 3.0], [15.7, 3.0], [15.8, 3.0], [15.9, 3.0], [16.0, 3.0], [16.1, 3.0], [16.2, 3.0], [16.3, 3.0], [16.4, 3.0], [16.5, 3.0], [16.6, 3.0], [16.7, 3.0], [16.8, 3.0], [16.9, 3.0], [17.0, 3.0], [17.1, 3.0], [17.2, 3.0], [17.3, 3.0], [17.4, 3.0], [17.5, 3.0], [17.6, 3.0], [17.7, 3.0], [17.8, 3.0], [17.9, 3.0], [18.0, 3.0], [18.1, 3.0], [18.2, 3.0], [18.3, 3.0], [18.4, 3.0], [18.5, 3.0], [18.6, 3.0], [18.7, 3.0], [18.8, 3.0], [18.9, 3.0], [19.0, 3.0], [19.1, 3.0], [19.2, 3.0], [19.3, 3.0], [19.4, 3.0], [19.5, 3.0], [19.6, 3.0], [19.7, 3.0], [19.8, 3.0], [19.9, 3.0], [20.0, 3.0], [20.1, 3.0], [20.2, 3.0], [20.3, 3.0], [20.4, 3.0], [20.5, 3.0], [20.6, 3.0], [20.7, 3.0], [20.8, 3.0], [20.9, 3.0], [21.0, 3.0], [21.1, 3.0], [21.2, 3.0], [21.3, 3.0], [21.4, 3.0], [21.5, 3.0], [21.6, 3.0], [21.7, 3.0], [21.8, 3.0], [21.9, 3.0], [22.0, 3.0], [22.1, 3.0], [22.2, 3.0], [22.3, 3.0], [22.4, 3.0], [22.5, 3.0], [22.6, 3.0], [22.7, 3.0], [22.8, 3.0], [22.9, 3.0], [23.0, 3.0], [23.1, 3.0], [23.2, 3.0], [23.3, 3.0], [23.4, 3.0], [23.5, 3.0], [23.6, 3.0], [23.7, 3.0], [23.8, 3.0], [23.9, 3.0], [24.0, 3.0], [24.1, 3.0], [24.2, 3.0], [24.3, 3.0], [24.4, 3.0], [24.5, 3.0], [24.6, 3.0], [24.7, 3.0], [24.8, 3.0], [24.9, 3.0], [25.0, 3.0], [25.1, 3.0], [25.2, 3.0], [25.3, 3.0], [25.4, 3.0], [25.5, 4.0], [25.6, 4.0], [25.7, 4.0], [25.8, 4.0], [25.9, 4.0], [26.0, 4.0], [26.1, 4.0], [26.2, 4.0], [26.3, 4.0], [26.4, 4.0], [26.5, 4.0], [26.6, 4.0], [26.7, 4.0], [26.8, 4.0], [26.9, 4.0], [27.0, 4.0], [27.1, 4.0], [27.2, 4.0], [27.3, 4.0], [27.4, 4.0], [27.5, 4.0], [27.6, 4.0], [27.7, 4.0], [27.8, 4.0], [27.9, 4.0], [28.0, 4.0], [28.1, 4.0], [28.2, 4.0], [28.3, 4.0], [28.4, 4.0], [28.5, 4.0], [28.6, 4.0], [28.7, 4.0], [28.8, 4.0], [28.9, 4.0], [29.0, 4.0], [29.1, 4.0], [29.2, 4.0], [29.3, 4.0], [29.4, 4.0], [29.5, 4.0], [29.6, 4.0], [29.7, 4.0], [29.8, 4.0], [29.9, 4.0], [30.0, 4.0], [30.1, 4.0], [30.2, 4.0], [30.3, 4.0], [30.4, 4.0], [30.5, 4.0], [30.6, 4.0], [30.7, 4.0], [30.8, 4.0], [30.9, 4.0], [31.0, 4.0], [31.1, 4.0], [31.2, 4.0], [31.3, 4.0], [31.4, 4.0], [31.5, 4.0], [31.6, 4.0], [31.7, 4.0], [31.8, 4.0], [31.9, 4.0], [32.0, 4.0], [32.1, 4.0], [32.2, 4.0], [32.3, 4.0], [32.4, 4.0], [32.5, 4.0], [32.6, 4.0], [32.7, 4.0], [32.8, 4.0], [32.9, 4.0], [33.0, 4.0], [33.1, 4.0], [33.2, 4.0], [33.3, 4.0], [33.4, 4.0], [33.5, 4.0], [33.6, 4.0], [33.7, 4.0], [33.8, 4.0], [33.9, 4.0], [34.0, 4.0], [34.1, 4.0], [34.2, 4.0], [34.3, 4.0], [34.4, 4.0], [34.5, 4.0], [34.6, 4.0], [34.7, 4.0], [34.8, 4.0], [34.9, 4.0], [35.0, 4.0], [35.1, 4.0], [35.2, 4.0], [35.3, 4.0], [35.4, 4.0], [35.5, 4.0], [35.6, 4.0], [35.7, 4.0], [35.8, 4.0], [35.9, 4.0], [36.0, 4.0], [36.1, 4.0], [36.2, 4.0], [36.3, 4.0], [36.4, 4.0], [36.5, 4.0], [36.6, 4.0], [36.7, 4.0], [36.8, 4.0], [36.9, 4.0], [37.0, 4.0], [37.1, 4.0], [37.2, 4.0], [37.3, 4.0], [37.4, 4.0], [37.5, 4.0], [37.6, 4.0], [37.7, 4.0], [37.8, 4.0], [37.9, 4.0], [38.0, 4.0], [38.1, 4.0], [38.2, 4.0], [38.3, 4.0], [38.4, 4.0], [38.5, 4.0], [38.6, 4.0], [38.7, 4.0], [38.8, 4.0], [38.9, 4.0], [39.0, 4.0], [39.1, 4.0], [39.2, 4.0], [39.3, 4.0], [39.4, 4.0], [39.5, 4.0], [39.6, 4.0], [39.7, 4.0], [39.8, 4.0], [39.9, 4.0], [40.0, 4.0], [40.1, 4.0], [40.2, 4.0], [40.3, 4.0], [40.4, 4.0], [40.5, 4.0], [40.6, 4.0], [40.7, 4.0], [40.8, 4.0], [40.9, 4.0], [41.0, 4.0], [41.1, 4.0], [41.2, 4.0], [41.3, 4.0], [41.4, 4.0], [41.5, 4.0], [41.6, 4.0], [41.7, 4.0], [41.8, 5.0], [41.9, 5.0], [42.0, 5.0], [42.1, 5.0], [42.2, 5.0], [42.3, 5.0], [42.4, 5.0], [42.5, 5.0], [42.6, 5.0], [42.7, 5.0], [42.8, 5.0], [42.9, 5.0], [43.0, 5.0], [43.1, 5.0], [43.2, 5.0], [43.3, 5.0], [43.4, 5.0], [43.5, 5.0], [43.6, 5.0], [43.7, 5.0], [43.8, 5.0], [43.9, 5.0], [44.0, 5.0], [44.1, 5.0], [44.2, 5.0], [44.3, 5.0], [44.4, 5.0], [44.5, 5.0], [44.6, 5.0], [44.7, 5.0], [44.8, 5.0], [44.9, 5.0], [45.0, 5.0], [45.1, 5.0], [45.2, 5.0], [45.3, 5.0], [45.4, 5.0], [45.5, 5.0], [45.6, 5.0], [45.7, 5.0], [45.8, 5.0], [45.9, 5.0], [46.0, 5.0], [46.1, 5.0], [46.2, 5.0], [46.3, 5.0], [46.4, 5.0], [46.5, 5.0], [46.6, 5.0], [46.7, 5.0], [46.8, 5.0], [46.9, 5.0], [47.0, 5.0], [47.1, 5.0], [47.2, 5.0], [47.3, 5.0], [47.4, 5.0], [47.5, 5.0], [47.6, 5.0], [47.7, 5.0], [47.8, 5.0], [47.9, 5.0], [48.0, 5.0], [48.1, 5.0], [48.2, 5.0], [48.3, 5.0], [48.4, 5.0], [48.5, 5.0], [48.6, 5.0], [48.7, 5.0], [48.8, 5.0], [48.9, 5.0], [49.0, 5.0], [49.1, 5.0], [49.2, 5.0], [49.3, 5.0], [49.4, 5.0], [49.5, 5.0], [49.6, 5.0], [49.7, 5.0], [49.8, 5.0], [49.9, 5.0], [50.0, 5.0], [50.1, 5.0], [50.2, 5.0], [50.3, 5.0], [50.4, 5.0], [50.5, 5.0], [50.6, 5.0], [50.7, 5.0], [50.8, 5.0], [50.9, 5.0], [51.0, 5.0], [51.1, 5.0], [51.2, 5.0], [51.3, 5.0], [51.4, 5.0], [51.5, 5.0], [51.6, 5.0], [51.7, 5.0], [51.8, 5.0], [51.9, 5.0], [52.0, 5.0], [52.1, 5.0], [52.2, 5.0], [52.3, 5.0], [52.4, 5.0], [52.5, 5.0], [52.6, 5.0], [52.7, 5.0], [52.8, 5.0], [52.9, 5.0], [53.0, 5.0], [53.1, 5.0], [53.2, 5.0], [53.3, 5.0], [53.4, 5.0], [53.5, 5.0], [53.6, 5.0], [53.7, 5.0], [53.8, 5.0], [53.9, 5.0], [54.0, 5.0], [54.1, 5.0], [54.2, 5.0], [54.3, 5.0], [54.4, 5.0], [54.5, 5.0], [54.6, 6.0], [54.7, 6.0], [54.8, 6.0], [54.9, 6.0], [55.0, 6.0], [55.1, 6.0], [55.2, 6.0], [55.3, 6.0], [55.4, 6.0], [55.5, 6.0], [55.6, 6.0], [55.7, 6.0], [55.8, 6.0], [55.9, 6.0], [56.0, 6.0], [56.1, 6.0], [56.2, 6.0], [56.3, 6.0], [56.4, 6.0], [56.5, 6.0], [56.6, 6.0], [56.7, 6.0], [56.8, 6.0], [56.9, 6.0], [57.0, 6.0], [57.1, 6.0], [57.2, 6.0], [57.3, 6.0], [57.4, 6.0], [57.5, 6.0], [57.6, 6.0], [57.7, 6.0], [57.8, 6.0], [57.9, 6.0], [58.0, 6.0], [58.1, 6.0], [58.2, 6.0], [58.3, 6.0], [58.4, 6.0], [58.5, 6.0], [58.6, 6.0], [58.7, 6.0], [58.8, 6.0], [58.9, 6.0], [59.0, 6.0], [59.1, 6.0], [59.2, 6.0], [59.3, 6.0], [59.4, 6.0], [59.5, 6.0], [59.6, 6.0], [59.7, 6.0], [59.8, 6.0], [59.9, 6.0], [60.0, 6.0], [60.1, 6.0], [60.2, 6.0], [60.3, 6.0], [60.4, 6.0], [60.5, 6.0], [60.6, 6.0], [60.7, 6.0], [60.8, 6.0], [60.9, 6.0], [61.0, 6.0], [61.1, 6.0], [61.2, 6.0], [61.3, 6.0], [61.4, 6.0], [61.5, 6.0], [61.6, 6.0], [61.7, 6.0], [61.8, 6.0], [61.9, 6.0], [62.0, 6.0], [62.1, 6.0], [62.2, 6.0], [62.3, 6.0], [62.4, 6.0], [62.5, 6.0], [62.6, 6.0], [62.7, 6.0], [62.8, 6.0], [62.9, 6.0], [63.0, 6.0], [63.1, 6.0], [63.2, 6.0], [63.3, 6.0], [63.4, 6.0], [63.5, 6.0], [63.6, 6.0], [63.7, 6.0], [63.8, 7.0], [63.9, 7.0], [64.0, 7.0], [64.1, 7.0], [64.2, 7.0], [64.3, 7.0], [64.4, 7.0], [64.5, 7.0], [64.6, 7.0], [64.7, 7.0], [64.8, 7.0], [64.9, 7.0], [65.0, 7.0], [65.1, 7.0], [65.2, 7.0], [65.3, 7.0], [65.4, 7.0], [65.5, 7.0], [65.6, 7.0], [65.7, 7.0], [65.8, 7.0], [65.9, 7.0], [66.0, 7.0], [66.1, 7.0], [66.2, 7.0], [66.3, 7.0], [66.4, 7.0], [66.5, 7.0], [66.6, 7.0], [66.7, 7.0], [66.8, 7.0], [66.9, 7.0], [67.0, 7.0], [67.1, 7.0], [67.2, 7.0], [67.3, 7.0], [67.4, 7.0], [67.5, 7.0], [67.6, 7.0], [67.7, 7.0], [67.8, 7.0], [67.9, 7.0], [68.0, 7.0], [68.1, 7.0], [68.2, 7.0], [68.3, 7.0], [68.4, 7.0], [68.5, 7.0], [68.6, 7.0], [68.7, 7.0], [68.8, 7.0], [68.9, 7.0], [69.0, 7.0], [69.1, 7.0], [69.2, 7.0], [69.3, 7.0], [69.4, 7.0], [69.5, 7.0], [69.6, 7.0], [69.7, 7.0], [69.8, 7.0], [69.9, 7.0], [70.0, 7.0], [70.1, 7.0], [70.2, 7.0], [70.3, 7.0], [70.4, 7.0], [70.5, 7.0], [70.6, 7.0], [70.7, 7.0], [70.8, 7.0], [70.9, 7.0], [71.0, 7.0], [71.1, 8.0], [71.2, 8.0], [71.3, 8.0], [71.4, 8.0], [71.5, 8.0], [71.6, 8.0], [71.7, 8.0], [71.8, 8.0], [71.9, 8.0], [72.0, 8.0], [72.1, 8.0], [72.2, 8.0], [72.3, 8.0], [72.4, 8.0], [72.5, 8.0], [72.6, 8.0], [72.7, 8.0], [72.8, 8.0], [72.9, 8.0], [73.0, 8.0], [73.1, 8.0], [73.2, 8.0], [73.3, 8.0], [73.4, 8.0], [73.5, 8.0], [73.6, 8.0], [73.7, 8.0], [73.8, 8.0], [73.9, 8.0], [74.0, 8.0], [74.1, 8.0], [74.2, 8.0], [74.3, 8.0], [74.4, 8.0], [74.5, 8.0], [74.6, 8.0], [74.7, 8.0], [74.8, 8.0], [74.9, 8.0], [75.0, 8.0], [75.1, 8.0], [75.2, 8.0], [75.3, 8.0], [75.4, 8.0], [75.5, 8.0], [75.6, 8.0], [75.7, 8.0], [75.8, 8.0], [75.9, 8.0], [76.0, 8.0], [76.1, 8.0], [76.2, 8.0], [76.3, 8.0], [76.4, 8.0], [76.5, 8.0], [76.6, 8.0], [76.7, 8.0], [76.8, 8.0], [76.9, 8.0], [77.0, 9.0], [77.1, 9.0], [77.2, 9.0], [77.3, 9.0], [77.4, 9.0], [77.5, 9.0], [77.6, 9.0], [77.7, 9.0], [77.8, 9.0], [77.9, 9.0], [78.0, 9.0], [78.1, 9.0], [78.2, 9.0], [78.3, 9.0], [78.4, 9.0], [78.5, 9.0], [78.6, 9.0], [78.7, 9.0], [78.8, 9.0], [78.9, 9.0], [79.0, 9.0], [79.1, 9.0], [79.2, 9.0], [79.3, 9.0], [79.4, 9.0], [79.5, 9.0], [79.6, 9.0], [79.7, 9.0], [79.8, 9.0], [79.9, 9.0], [80.0, 9.0], [80.1, 9.0], [80.2, 9.0], [80.3, 9.0], [80.4, 9.0], [80.5, 9.0], [80.6, 9.0], [80.7, 9.0], [80.8, 9.0], [80.9, 9.0], [81.0, 9.0], [81.1, 9.0], [81.2, 10.0], [81.3, 10.0], [81.4, 10.0], [81.5, 10.0], [81.6, 10.0], [81.7, 10.0], [81.8, 10.0], [81.9, 10.0], [82.0, 10.0], [82.1, 10.0], [82.2, 10.0], [82.3, 10.0], [82.4, 10.0], [82.5, 10.0], [82.6, 10.0], [82.7, 10.0], [82.8, 10.0], [82.9, 10.0], [83.0, 10.0], [83.1, 10.0], [83.2, 10.0], [83.3, 10.0], [83.4, 10.0], [83.5, 10.0], [83.6, 10.0], [83.7, 10.0], [83.8, 10.0], [83.9, 10.0], [84.0, 10.0], [84.1, 10.0], [84.2, 11.0], [84.3, 11.0], [84.4, 11.0], [84.5, 11.0], [84.6, 11.0], [84.7, 11.0], [84.8, 11.0], [84.9, 11.0], [85.0, 11.0], [85.1, 11.0], [85.2, 11.0], [85.3, 11.0], [85.4, 11.0], [85.5, 11.0], [85.6, 11.0], [85.7, 11.0], [85.8, 11.0], [85.9, 11.0], [86.0, 11.0], [86.1, 11.0], [86.2, 11.0], [86.3, 11.0], [86.4, 12.0], [86.5, 12.0], [86.6, 12.0], [86.7, 12.0], [86.8, 12.0], [86.9, 12.0], [87.0, 12.0], [87.1, 12.0], [87.2, 12.0], [87.3, 12.0], [87.4, 12.0], [87.5, 12.0], [87.6, 12.0], [87.7, 12.0], [87.8, 12.0], [87.9, 13.0], [88.0, 13.0], [88.1, 13.0], [88.2, 13.0], [88.3, 13.0], [88.4, 13.0], [88.5, 13.0], [88.6, 13.0], [88.7, 13.0], [88.8, 13.0], [88.9, 13.0], [89.0, 13.0], [89.1, 13.0], [89.2, 13.0], [89.3, 14.0], [89.4, 14.0], [89.5, 14.0], [89.6, 14.0], [89.7, 14.0], [89.8, 14.0], [89.9, 14.0], [90.0, 14.0], [90.1, 14.0], [90.2, 15.0], [90.3, 15.0], [90.4, 15.0], [90.5, 15.0], [90.6, 15.0], [90.7, 15.0], [90.8, 15.0], [90.9, 15.0], [91.0, 15.0], [91.1, 15.0], [91.2, 16.0], [91.3, 16.0], [91.4, 16.0], [91.5, 16.0], [91.6, 16.0], [91.7, 16.0], [91.8, 16.0], [91.9, 16.0], [92.0, 16.0], [92.1, 17.0], [92.2, 17.0], [92.3, 17.0], [92.4, 17.0], [92.5, 17.0], [92.6, 17.0], [92.7, 17.0], [92.8, 18.0], [92.9, 18.0], [93.0, 18.0], [93.1, 18.0], [93.2, 18.0], [93.3, 18.0], [93.4, 18.0], [93.5, 18.0], [93.6, 19.0], [93.7, 19.0], [93.8, 19.0], [93.9, 19.0], [94.0, 19.0], [94.1, 19.0], [94.2, 19.0], [94.3, 19.0], [94.4, 20.0], [94.5, 20.0], [94.6, 21.0], [94.7, 21.0], [94.8, 21.0], [94.9, 22.0], [95.0, 22.0], [95.1, 22.0], [95.2, 22.0], [95.3, 23.0], [95.4, 23.0], [95.5, 23.0], [95.6, 23.0], [95.7, 24.0], [95.8, 24.0], [95.9, 24.0], [96.0, 25.0], [96.1, 25.0], [96.2, 25.0], [96.3, 25.0], [96.4, 26.0], [96.5, 26.0], [96.6, 26.0], [96.7, 27.0], [96.8, 27.0], [96.9, 27.0], [97.0, 29.0], [97.1, 29.0], [97.2, 29.0], [97.3, 30.0], [97.4, 31.0], [97.5, 32.0], [97.6, 32.0], [97.7, 33.0], [97.8, 34.0], [97.9, 35.0], [98.0, 35.0], [98.1, 42.0], [98.2, 43.0], [98.3, 43.0], [98.4, 46.0], [98.5, 48.0], [98.6, 51.0], [98.7, 51.0], [98.8, 56.0], [98.9, 56.0], [99.0, 61.0], [99.1, 62.0], [99.2, 68.0], [99.3, 74.0], [99.4, 78.0], [99.5, 79.0], [99.6, 81.0], [99.7, 95.0], [99.8, 101.0], [99.9, 130.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[0.0, 200.0], [0.1, 206.0], [0.2, 212.0], [0.3, 212.0], [0.4, 221.0], [0.5, 226.0], [0.6, 235.0], [0.7, 250.0], [0.8, 258.0], [0.9, 276.0], [1.0, 294.0], [1.1, 299.0], [1.2, 307.0], [1.3, 312.0], [1.4, 312.0], [1.5, 324.0], [1.6, 326.0], [1.7, 333.0], [1.8, 338.0], [1.9, 346.0], [2.0, 351.0], [2.1, 352.0], [2.2, 355.0], [2.3, 358.0], [2.4, 377.0], [2.5, 385.0], [2.6, 393.0], [2.7, 395.0], [2.8, 402.0], [2.9, 423.0], [3.0, 428.0], [3.1, 429.0], [3.2, 430.0], [3.3, 437.0], [3.4, 448.0], [3.5, 452.0], [3.6, 453.0], [3.7, 460.0], [3.8, 463.0], [3.9, 468.0], [4.0, 472.0], [4.1, 472.0], [4.2, 473.0], [4.3, 476.0], [4.4, 476.0], [4.5, 478.0], [4.6, 480.0], [4.7, 484.0], [4.8, 485.0], [4.9, 493.0], [5.0, 500.0], [5.1, 503.0], [5.2, 516.0], [5.3, 522.0], [5.4, 528.0], [5.5, 533.0], [5.6, 533.0], [5.7, 543.0], [5.8, 548.0], [5.9, 551.0], [6.0, 553.0], [6.1, 557.0], [6.2, 563.0], [6.3, 567.0], [6.4, 573.0], [6.5, 576.0], [6.6, 583.0], [6.7, 585.0], [6.8, 586.0], [6.9, 587.0], [7.0, 588.0], [7.1, 590.0], [7.2, 598.0], [7.3, 598.0], [7.4, 604.0], [7.5, 615.0], [7.6, 619.0], [7.7, 619.0], [7.8, 634.0], [7.9, 643.0], [8.0, 646.0], [8.1, 647.0], [8.2, 648.0], [8.3, 660.0], [8.4, 665.0], [8.5, 672.0], [8.6, 679.0], [8.7, 687.0], [8.8, 687.0], [8.9, 689.0], [9.0, 690.0], [9.1, 691.0], [9.2, 692.0], [9.3, 693.0], [9.4, 694.0], [9.5, 700.0], [9.6, 704.0], [9.7, 704.0], [9.8, 705.0], [9.9, 715.0], [10.0, 722.0], [10.1, 724.0], [10.2, 728.0], [10.3, 732.0], [10.4, 734.0], [10.5, 745.0], [10.6, 745.0], [10.7, 753.0], [10.8, 753.0], [10.9, 755.0], [11.0, 758.0], [11.1, 760.0], [11.2, 761.0], [11.3, 761.0], [11.4, 762.0], [11.5, 769.0], [11.6, 772.0], [11.7, 774.0], [11.8, 774.0], [11.9, 775.0], [12.0, 777.0], [12.1, 777.0], [12.2, 792.0], [12.3, 794.0], [12.4, 796.0], [12.5, 798.0], [12.6, 799.0], [12.7, 799.0], [12.8, 818.0], [12.9, 818.0], [13.0, 819.0], [13.1, 832.0], [13.2, 839.0], [13.3, 843.0], [13.4, 848.0], [13.5, 851.0], [13.6, 854.0], [13.7, 854.0], [13.8, 861.0], [13.9, 865.0], [14.0, 868.0], [14.1, 870.0], [14.2, 872.0], [14.3, 875.0], [14.4, 878.0], [14.5, 883.0], [14.6, 885.0], [14.7, 894.0], [14.8, 895.0], [14.9, 907.0], [15.0, 914.0], [15.1, 922.0], [15.2, 926.0], [15.3, 927.0], [15.4, 930.0], [15.5, 934.0], [15.6, 936.0], [15.7, 944.0], [15.8, 945.0], [15.9, 947.0], [16.0, 952.0], [16.1, 963.0], [16.2, 973.0], [16.3, 974.0], [16.4, 974.0], [16.5, 986.0], [16.6, 991.0], [16.7, 996.0], [16.8, 1001.0], [16.9, 1004.0], [17.0, 1013.0], [17.1, 1021.0], [17.2, 1041.0], [17.3, 1042.0], [17.4, 1042.0], [17.5, 1043.0], [17.6, 1056.0], [17.7, 1060.0], [17.8, 1062.0], [17.9, 1064.0], [18.0, 1065.0], [18.1, 1066.0], [18.2, 1069.0], [18.3, 1079.0], [18.4, 1081.0], [18.5, 1085.0], [18.6, 1087.0], [18.7, 1094.0], [18.8, 1096.0], [18.9, 1103.0], [19.0, 1113.0], [19.1, 1113.0], [19.2, 1115.0], [19.3, 1119.0], [19.4, 1119.0], [19.5, 1120.0], [19.6, 1124.0], [19.7, 1132.0], [19.8, 1136.0], [19.9, 1144.0], [20.0, 1156.0], [20.1, 1163.0], [20.2, 1183.0], [20.3, 1186.0], [20.4, 1198.0], [20.5, 1200.0], [20.6, 1205.0], [20.7, 1211.0], [20.8, 1214.0], [20.9, 1220.0], [21.0, 1222.0], [21.1, 1223.0], [21.2, 1230.0], [21.3, 1232.0], [21.4, 1234.0], [21.5, 1241.0], [21.6, 1249.0], [21.7, 1251.0], [21.8, 1265.0], [21.9, 1271.0], [22.0, 1279.0], [22.1, 1281.0], [22.2, 1290.0], [22.3, 1295.0], [22.4, 1318.0], [22.5, 1335.0], [22.6, 1335.0], [22.7, 1340.0], [22.8, 1354.0], [22.9, 1366.0], [23.0, 1376.0], [23.1, 1378.0], [23.2, 1390.0], [23.3, 1398.0], [23.4, 1398.0], [23.5, 1399.0], [23.6, 1417.0], [23.7, 1421.0], [23.8, 1424.0], [23.9, 1434.0], [24.0, 1441.0], [24.1, 1447.0], [24.2, 1451.0], [24.3, 1457.0], [24.4, 1471.0], [24.5, 1475.0], [24.6, 1481.0], [24.7, 1502.0], [24.8, 1517.0], [24.9, 1523.0], [25.0, 1523.0], [25.1, 1543.0], [25.2, 1545.0], [25.3, 1553.0], [25.4, 1554.0], [25.5, 1572.0], [25.6, 1572.0], [25.7, 1574.0], [25.8, 1574.0], [25.9, 1582.0], [26.0, 1601.0], [26.1, 1614.0], [26.2, 1631.0], [26.3, 1631.0], [26.4, 1645.0], [26.5, 1680.0], [26.6, 1681.0], [26.7, 1687.0], [26.8, 1701.0], [26.9, 1703.0], [27.0, 1705.0], [27.1, 1723.0], [27.2, 1748.0], [27.3, 1750.0], [27.4, 1756.0], [27.5, 1758.0], [27.6, 1761.0], [27.7, 1763.0], [27.8, 1767.0], [27.9, 1790.0], [28.0, 1794.0], [28.1, 1806.0], [28.2, 1820.0], [28.3, 1826.0], [28.4, 1836.0], [28.5, 1836.0], [28.6, 1842.0], [28.7, 1844.0], [28.8, 1851.0], [28.9, 1851.0], [29.0, 1854.0], [29.1, 1857.0], [29.2, 1864.0], [29.3, 1865.0], [29.4, 1876.0], [29.5, 1878.0], [29.6, 1907.0], [29.7, 1913.0], [29.8, 1917.0], [29.9, 1922.0], [30.0, 1944.0], [30.1, 1953.0], [30.2, 1960.0], [30.3, 1962.0], [30.4, 1964.0], [30.5, 1967.0], [30.6, 1971.0], [30.7, 1974.0], [30.8, 1995.0], [30.9, 2011.0], [31.0, 2025.0], [31.1, 2033.0], [31.2, 2034.0], [31.3, 2037.0], [31.4, 2039.0], [31.5, 2042.0], [31.6, 2052.0], [31.7, 2065.0], [31.8, 2067.0], [31.9, 2070.0], [32.0, 2076.0], [32.1, 2083.0], [32.2, 2096.0], [32.3, 2105.0], [32.4, 2120.0], [32.5, 2131.0], [32.6, 2142.0], [32.7, 2151.0], [32.8, 2185.0], [32.9, 2206.0], [33.0, 2209.0], [33.1, 2211.0], [33.2, 2212.0], [33.3, 2245.0], [33.4, 2247.0], [33.5, 2272.0], [33.6, 2294.0], [33.7, 2296.0], [33.8, 2314.0], [33.9, 2315.0], [34.0, 2316.0], [34.1, 2317.0], [34.2, 2320.0], [34.3, 2323.0], [34.4, 2343.0], [34.5, 2354.0], [34.6, 2362.0], [34.7, 2414.0], [34.8, 2426.0], [34.9, 2435.0], [35.0, 2448.0], [35.1, 2456.0], [35.2, 2470.0], [35.3, 2477.0], [35.4, 2480.0], [35.5, 2480.0], [35.6, 2501.0], [35.7, 2503.0], [35.8, 2517.0], [35.9, 2525.0], [36.0, 2536.0], [36.1, 2561.0], [36.2, 2573.0], [36.3, 2580.0], [36.4, 2584.0], [36.5, 2589.0], [36.6, 2606.0], [36.7, 2610.0], [36.8, 2612.0], [36.9, 2618.0], [37.0, 2630.0], [37.1, 2640.0], [37.2, 2644.0], [37.3, 2660.0], [37.4, 2673.0], [37.5, 2674.0], [37.6, 2687.0], [37.7, 2696.0], [37.8, 2697.0], [37.9, 2702.0], [38.0, 2709.0], [38.1, 2724.0], [38.2, 2732.0], [38.3, 2746.0], [38.4, 2755.0], [38.5, 2761.0], [38.6, 2766.0], [38.7, 2789.0], [38.8, 2803.0], [38.9, 2804.0], [39.0, 2825.0], [39.1, 2827.0], [39.2, 2845.0], [39.3, 2849.0], [39.4, 2859.0], [39.5, 2873.0], [39.6, 2879.0], [39.7, 2882.0], [39.8, 2895.0], [39.9, 2901.0], [40.0, 2904.0], [40.1, 2912.0], [40.2, 2921.0], [40.3, 2968.0], [40.4, 2981.0], [40.5, 2983.0], [40.6, 2984.0], [40.7, 2991.0], [40.8, 2992.0], [40.9, 2999.0], [41.0, 3017.0], [41.1, 3029.0], [41.2, 3042.0], [41.3, 3043.0], [41.4, 3059.0], [41.5, 3064.0], [41.6, 3092.0], [41.7, 3093.0], [41.8, 3117.0], [41.9, 3145.0], [42.0, 3147.0], [42.1, 3165.0], [42.2, 3175.0], [42.3, 3178.0], [42.4, 3194.0], [42.5, 3204.0], [42.6, 3212.0], [42.7, 3236.0], [42.8, 3236.0], [42.9, 3252.0], [43.0, 3255.0], [43.1, 3256.0], [43.2, 3261.0], [43.3, 3276.0], [43.4, 3283.0], [43.5, 3292.0], [43.6, 3306.0], [43.7, 3311.0], [43.8, 3319.0], [43.9, 3323.0], [44.0, 3343.0], [44.1, 3354.0], [44.2, 3356.0], [44.3, 3364.0], [44.4, 3372.0], [44.5, 3389.0], [44.6, 3415.0], [44.7, 3427.0], [44.8, 3514.0], [44.9, 3522.0], [45.0, 3529.0], [45.1, 3533.0], [45.2, 3540.0], [45.3, 3548.0], [45.4, 3556.0], [45.5, 3569.0], [45.6, 3575.0], [45.7, 3591.0], [45.8, 3607.0], [45.9, 3610.0], [46.0, 3677.0], [46.1, 3683.0], [46.2, 3692.0], [46.3, 3695.0], [46.4, 3733.0], [46.5, 3736.0], [46.6, 3746.0], [46.7, 3756.0], [46.8, 3767.0], [46.9, 3773.0], [47.0, 3776.0], [47.1, 3795.0], [47.2, 3814.0], [47.3, 3814.0], [47.4, 3843.0], [47.5, 3859.0], [47.6, 3933.0], [47.7, 3937.0], [47.8, 3954.0], [47.9, 3963.0], [48.0, 3987.0], [48.1, 3988.0], [48.2, 4002.0], [48.3, 4023.0], [48.4, 4023.0], [48.5, 4028.0], [48.6, 4033.0], [48.7, 4036.0], [48.8, 4039.0], [48.9, 4057.0], [49.0, 4077.0], [49.1, 4086.0], [49.2, 4100.0], [49.3, 4140.0], [49.4, 4143.0], [49.5, 4153.0], [49.6, 4172.0], [49.7, 4173.0], [49.8, 4179.0], [49.9, 4191.0], [50.0, 4230.0], [50.1, 4242.0], [50.2, 4268.0], [50.3, 4269.0], [50.4, 4271.0], [50.5, 4301.0], [50.6, 4323.0], [50.7, 4327.0], [50.8, 4346.0], [50.9, 4379.0], [51.0, 4382.0], [51.1, 4434.0], [51.2, 4444.0], [51.3, 4465.0], [51.4, 4497.0], [51.5, 4511.0], [51.6, 4524.0], [51.7, 4527.0], [51.8, 4555.0], [51.9, 4563.0], [52.0, 4590.0], [52.1, 4604.0], [52.2, 4631.0], [52.3, 4654.0], [52.4, 4656.0], [52.5, 4660.0], [52.6, 4662.0], [52.7, 4686.0], [52.8, 4692.0], [52.9, 4694.0], [53.0, 4702.0], [53.1, 4716.0], [53.2, 4752.0], [53.3, 4793.0], [53.4, 4793.0], [53.5, 4795.0], [53.6, 4797.0], [53.7, 4809.0], [53.8, 4855.0], [53.9, 4872.0], [54.0, 4882.0], [54.1, 5004.0], [54.2, 5015.0], [54.3, 5038.0], [54.4, 5050.0], [54.5, 5056.0], [54.6, 5060.0], [54.7, 5073.0], [54.8, 5078.0], [54.9, 5078.0], [55.0, 5098.0], [55.1, 5106.0], [55.2, 5116.0], [55.3, 5123.0], [55.4, 5131.0], [55.5, 5144.0], [55.6, 5151.0], [55.7, 5164.0], [55.8, 5182.0], [55.9, 5184.0], [56.0, 5194.0], [56.1, 5210.0], [56.2, 5237.0], [56.3, 5248.0], [56.4, 5272.0], [56.5, 5290.0], [56.6, 5329.0], [56.7, 5331.0], [56.8, 5349.0], [56.9, 5352.0], [57.0, 5356.0], [57.1, 5373.0], [57.2, 5389.0], [57.3, 5399.0], [57.4, 5414.0], [57.5, 5429.0], [57.6, 5450.0], [57.7, 5456.0], [57.8, 5480.0], [57.9, 5514.0], [58.0, 5528.0], [58.1, 5545.0], [58.2, 5556.0], [58.3, 5585.0], [58.4, 5614.0], [58.5, 5631.0], [58.6, 5643.0], [58.7, 5646.0], [58.8, 5655.0], [58.9, 5659.0], [59.0, 5678.0], [59.1, 5697.0], [59.2, 5700.0], [59.3, 5713.0], [59.4, 5739.0], [59.5, 5776.0], [59.6, 5789.0], [59.7, 5810.0], [59.8, 5830.0], [59.9, 5839.0], [60.0, 5850.0], [60.1, 5859.0], [60.2, 5888.0], [60.3, 5915.0], [60.4, 5935.0], [60.5, 5953.0], [60.6, 5963.0], [60.7, 5976.0], [60.8, 5981.0], [60.9, 5994.0], [61.0, 6028.0], [61.1, 6047.0], [61.2, 6063.0], [61.3, 6081.0], [61.4, 6095.0], [61.5, 6124.0], [61.6, 6187.0], [61.7, 6211.0], [61.8, 6217.0], [61.9, 6227.0], [62.0, 6250.0], [62.1, 6277.0], [62.2, 6311.0], [62.3, 6315.0], [62.4, 6345.0], [62.5, 6357.0], [62.6, 6380.0], [62.7, 6402.0], [62.8, 6470.0], [62.9, 6474.0], [63.0, 6499.0], [63.1, 6517.0], [63.2, 6540.0], [63.3, 6568.0], [63.4, 6576.0], [63.5, 6587.0], [63.6, 6593.0], [63.7, 6600.0], [63.8, 6622.0], [63.9, 6652.0], [64.0, 6667.0], [64.1, 6681.0], [64.2, 6699.0], [64.3, 6713.0], [64.4, 6717.0], [64.5, 6727.0], [64.6, 6736.0], [64.7, 6750.0], [64.8, 6769.0], [64.9, 6854.0], [65.0, 6866.0], [65.1, 6877.0], [65.2, 6884.0], [65.3, 6911.0], [65.4, 6943.0], [65.5, 6957.0], [65.6, 6961.0], [65.7, 7004.0], [65.8, 7050.0], [65.9, 7090.0], [66.0, 7100.0], [66.1, 7100.0], [66.2, 7107.0], [66.3, 7118.0], [66.4, 7204.0], [66.5, 7267.0], [66.6, 7343.0], [66.7, 7358.0], [66.8, 7367.0], [66.9, 7367.0], [67.0, 7397.0], [67.1, 7464.0], [67.2, 7472.0], [67.3, 7503.0], [67.4, 7511.0], [67.5, 7528.0], [67.6, 7530.0], [67.7, 7610.0], [67.8, 7645.0], [67.9, 7645.0], [68.0, 7715.0], [68.1, 7721.0], [68.2, 7747.0], [68.3, 7750.0], [68.4, 7763.0], [68.5, 7771.0], [68.6, 7816.0], [68.7, 7824.0], [68.8, 7841.0], [68.9, 7849.0], [69.0, 7920.0], [69.1, 7924.0], [69.2, 7926.0], [69.3, 7929.0], [69.4, 8045.0], [69.5, 8055.0], [69.6, 8063.0], [69.7, 8086.0], [69.8, 8166.0], [69.9, 8167.0], [70.0, 8190.0], [70.1, 8201.0], [70.2, 8234.0], [70.3, 8249.0], [70.4, 8321.0], [70.5, 8321.0], [70.6, 8333.0], [70.7, 8364.0], [70.8, 8404.0], [70.9, 8405.0], [71.0, 8490.0], [71.1, 8493.0], [71.2, 8496.0], [71.3, 8506.0], [71.4, 8511.0], [71.5, 8527.0], [71.6, 8630.0], [71.7, 8630.0], [71.8, 8666.0], [71.9, 8675.0], [72.0, 8677.0], [72.1, 8680.0], [72.2, 8731.0], [72.3, 8761.0], [72.4, 8794.0], [72.5, 8808.0], [72.6, 8841.0], [72.7, 8881.0], [72.8, 8897.0], [72.9, 8902.0], [73.0, 8942.0], [73.1, 8968.0], [73.2, 8995.0], [73.3, 9016.0], [73.4, 9040.0], [73.5, 9058.0], [73.6, 9114.0], [73.7, 9143.0], [73.8, 9144.0], [73.9, 9216.0], [74.0, 9304.0], [74.1, 9315.0], [74.2, 9328.0], [74.3, 9377.0], [74.4, 9428.0], [74.5, 9453.0], [74.6, 9456.0], [74.7, 9464.0], [74.8, 9467.0], [74.9, 9468.0], [75.0, 9487.0], [75.1, 9494.0], [75.2, 9531.0], [75.3, 9532.0], [75.4, 9573.0], [75.5, 9632.0], [75.6, 9651.0], [75.7, 9709.0], [75.8, 9751.0], [75.9, 9765.0], [76.0, 9821.0], [76.1, 9837.0], [76.2, 9859.0], [76.3, 9861.0], [76.4, 9912.0], [76.5, 9951.0], [76.6, 9964.0], [76.7, 9982.0], [76.8, 10017.0], [76.9, 10021.0], [77.0, 10097.0], [77.1, 10126.0], [77.2, 10130.0], [77.3, 10164.0], [77.4, 10168.0], [77.5, 10191.0], [77.6, 10279.0], [77.7, 10301.0], [77.8, 10325.0], [77.9, 10462.0], [78.0, 10502.0], [78.1, 10507.0], [78.2, 10555.0], [78.3, 10569.0], [78.4, 10617.0], [78.5, 10720.0], [78.6, 10739.0], [78.7, 10775.0], [78.8, 10874.0], [78.9, 10905.0], [79.0, 10907.0], [79.1, 11052.0], [79.2, 11075.0], [79.3, 11095.0], [79.4, 11152.0], [79.5, 11186.0], [79.6, 11199.0], [79.7, 11205.0], [79.8, 11237.0], [79.9, 11252.0], [80.0, 11260.0], [80.1, 11374.0], [80.2, 11396.0], [80.3, 11427.0], [80.4, 11463.0], [80.5, 11475.0], [80.6, 11482.0], [80.7, 11575.0], [80.8, 11629.0], [80.9, 11662.0], [81.0, 11688.0], [81.1, 11716.0], [81.2, 11763.0], [81.3, 11788.0], [81.4, 11795.0], [81.5, 11860.0], [81.6, 11861.0], [81.7, 11870.0], [81.8, 11887.0], [81.9, 11893.0], [82.0, 12002.0], [82.1, 12003.0], [82.2, 12004.0], [82.3, 12011.0], [82.4, 12019.0], [82.5, 12071.0], [82.6, 12099.0], [82.7, 12158.0], [82.8, 12243.0], [82.9, 12254.0], [83.0, 12265.0], [83.1, 12326.0], [83.2, 12366.0], [83.3, 12426.0], [83.4, 12537.0], [83.5, 12597.0], [83.6, 12611.0], [83.7, 12618.0], [83.8, 12639.0], [83.9, 12639.0], [84.0, 12645.0], [84.1, 12707.0], [84.2, 12769.0], [84.3, 12902.0], [84.4, 12914.0], [84.5, 13025.0], [84.6, 13027.0], [84.7, 13030.0], [84.8, 13067.0], [84.9, 13081.0], [85.0, 13086.0], [85.1, 13104.0], [85.2, 13146.0], [85.3, 13183.0], [85.4, 13222.0], [85.5, 13415.0], [85.6, 13428.0], [85.7, 13441.0], [85.8, 13463.0], [85.9, 13496.0], [86.0, 13510.0], [86.1, 13511.0], [86.2, 13549.0], [86.3, 13588.0], [86.4, 13610.0], [86.5, 13645.0], [86.6, 13647.0], [86.7, 13711.0], [86.8, 13749.0], [86.9, 13817.0], [87.0, 13844.0], [87.1, 13868.0], [87.2, 13888.0], [87.3, 13912.0], [87.4, 13929.0], [87.5, 13951.0], [87.6, 14016.0], [87.7, 14033.0], [87.8, 14038.0], [87.9, 14170.0], [88.0, 14209.0], [88.1, 14231.0], [88.2, 14239.0], [88.3, 14288.0], [88.4, 14310.0], [88.5, 14313.0], [88.6, 14335.0], [88.7, 14353.0], [88.8, 14396.0], [88.9, 14407.0], [89.0, 14419.0], [89.1, 14429.0], [89.2, 14467.0], [89.3, 14651.0], [89.4, 14672.0], [89.5, 14683.0], [89.6, 14723.0], [89.7, 14792.0], [89.8, 14838.0], [89.9, 14859.0], [90.0, 14871.0], [90.1, 14917.0], [90.2, 14936.0], [90.3, 14936.0], [90.4, 14955.0], [90.5, 15006.0], [90.6, 15041.0], [90.7, 15100.0], [90.8, 15137.0], [90.9, 15189.0], [91.0, 15195.0], [91.1, 15226.0], [91.2, 15367.0], [91.3, 15375.0], [91.4, 15404.0], [91.5, 15518.0], [91.6, 15524.0], [91.7, 15700.0], [91.8, 15729.0], [91.9, 15747.0], [92.0, 15839.0], [92.1, 15842.0], [92.2, 15845.0], [92.3, 15893.0], [92.4, 15899.0], [92.5, 15951.0], [92.6, 15987.0], [92.7, 15997.0], [92.8, 16008.0], [92.9, 16019.0], [93.0, 16027.0], [93.1, 16036.0], [93.2, 16081.0], [93.3, 16094.0], [93.4, 16108.0], [93.5, 16296.0], [93.6, 16312.0], [93.7, 16340.0], [93.8, 16371.0], [93.9, 16422.0], [94.0, 16428.0], [94.1, 16443.0], [94.2, 16468.0], [94.3, 16493.0], [94.4, 16524.0], [94.5, 16538.0], [94.6, 16550.0], [94.7, 16644.0], [94.8, 16658.0], [94.9, 16698.0], [95.0, 16717.0], [95.1, 16870.0], [95.2, 16876.0], [95.3, 16895.0], [95.4, 16969.0], [95.5, 16995.0], [95.6, 17052.0], [95.7, 17055.0], [95.8, 17210.0], [95.9, 17215.0], [96.0, 17236.0], [96.1, 17258.0], [96.2, 17271.0], [96.3, 17322.0], [96.4, 17439.0], [96.5, 17459.0], [96.6, 17480.0], [96.7, 17607.0], [96.8, 17693.0], [96.9, 17799.0], [97.0, 17819.0], [97.1, 17829.0], [97.2, 17837.0], [97.3, 17881.0], [97.4, 17919.0], [97.5, 17932.0], [97.6, 17948.0], [97.7, 17965.0], [97.8, 18196.0], [97.9, 18214.0], [98.0, 18253.0], [98.1, 18268.0], [98.2, 18465.0], [98.3, 18534.0], [98.4, 18745.0], [98.5, 18921.0], [98.6, 18935.0], [98.7, 18990.0], [98.8, 19260.0], [98.9, 19329.0], [99.0, 19334.0], [99.1, 19347.0], [99.2, 19592.0], [99.3, 19637.0], [99.4, 19753.0], [99.5, 19944.0], [99.6, 20031.0], [99.7, 20610.0], [99.8, 20710.0], [99.9, 20790.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[0.0, 75.0], [0.1, 79.0], [0.2, 80.0], [0.3, 80.0], [0.4, 82.0], [0.5, 85.0], [0.6, 88.0], [0.7, 89.0], [0.8, 91.0], [0.9, 92.0], [1.0, 95.0], [1.1, 95.0], [1.2, 105.0], [1.3, 137.0], [1.4, 137.0], [1.5, 140.0], [1.6, 144.0], [1.7, 166.0], [1.8, 176.0], [1.9, 195.0], [2.0, 204.0], [2.1, 207.0], [2.2, 215.0], [2.3, 218.0], [2.4, 221.0], [2.5, 234.0], [2.6, 240.0], [2.7, 248.0], [2.8, 257.0], [2.9, 270.0], [3.0, 323.0], [3.1, 324.0], [3.2, 325.0], [3.3, 327.0], [3.4, 335.0], [3.5, 364.0], [3.6, 395.0], [3.7, 409.0], [3.8, 412.0], [3.9, 465.0], [4.0, 466.0], [4.1, 468.0], [4.2, 475.0], [4.3, 478.0], [4.4, 498.0], [4.5, 533.0], [4.6, 542.0], [4.7, 544.0], [4.8, 550.0], [4.9, 578.0], [5.0, 582.0], [5.1, 593.0], [5.2, 594.0], [5.3, 595.0], [5.4, 596.0], [5.5, 602.0], [5.6, 604.0], [5.7, 606.0], [5.8, 612.0], [5.9, 615.0], [6.0, 615.0], [6.1, 616.0], [6.2, 618.0], [6.3, 663.0], [6.4, 671.0], [6.5, 671.0], [6.6, 683.0], [6.7, 688.0], [6.8, 703.0], [6.9, 709.0], [7.0, 710.0], [7.1, 711.0], [7.2, 724.0], [7.3, 730.0], [7.4, 736.0], [7.5, 747.0], [7.6, 756.0], [7.7, 758.0], [7.8, 765.0], [7.9, 770.0], [8.0, 780.0], [8.1, 784.0], [8.2, 798.0], [8.3, 799.0], [8.4, 814.0], [8.5, 822.0], [8.6, 832.0], [8.7, 838.0], [8.8, 843.0], [8.9, 845.0], [9.0, 860.0], [9.1, 903.0], [9.2, 905.0], [9.3, 906.0], [9.4, 912.0], [9.5, 919.0], [9.6, 932.0], [9.7, 941.0], [9.8, 963.0], [9.9, 971.0], [10.0, 984.0], [10.1, 988.0], [10.2, 989.0], [10.3, 997.0], [10.4, 1002.0], [10.5, 1025.0], [10.6, 1030.0], [10.7, 1050.0], [10.8, 1060.0], [10.9, 1073.0], [11.0, 1100.0], [11.1, 1102.0], [11.2, 1116.0], [11.3, 1141.0], [11.4, 1142.0], [11.5, 1151.0], [11.6, 1176.0], [11.7, 1184.0], [11.8, 1223.0], [11.9, 1239.0], [12.0, 1244.0], [12.1, 1252.0], [12.2, 1258.0], [12.3, 1262.0], [12.4, 1263.0], [12.5, 1268.0], [12.6, 1275.0], [12.7, 1275.0], [12.8, 1282.0], [12.9, 1284.0], [13.0, 1291.0], [13.1, 1300.0], [13.2, 1314.0], [13.3, 1317.0], [13.4, 1318.0], [13.5, 1337.0], [13.6, 1344.0], [13.7, 1350.0], [13.8, 1352.0], [13.9, 1408.0], [14.0, 1412.0], [14.1, 1415.0], [14.2, 1423.0], [14.3, 1432.0], [14.4, 1435.0], [14.5, 1443.0], [14.6, 1472.0], [14.7, 1476.0], [14.8, 1482.0], [14.9, 1485.0], [15.0, 1491.0], [15.1, 1494.0], [15.2, 1504.0], [15.3, 1515.0], [15.4, 1535.0], [15.5, 1540.0], [15.6, 1546.0], [15.7, 1550.0], [15.8, 1566.0], [15.9, 1566.0], [16.0, 1567.0], [16.1, 1577.0], [16.2, 1578.0], [16.3, 1596.0], [16.4, 1604.0], [16.5, 1610.0], [16.6, 1624.0], [16.7, 1630.0], [16.8, 1651.0], [16.9, 1679.0], [17.0, 1681.0], [17.1, 1703.0], [17.2, 1707.0], [17.3, 1738.0], [17.4, 1749.0], [17.5, 1752.0], [17.6, 1753.0], [17.7, 1756.0], [17.8, 1756.0], [17.9, 1759.0], [18.0, 1770.0], [18.1, 1772.0], [18.2, 1778.0], [18.3, 1790.0], [18.4, 1799.0], [18.5, 1803.0], [18.6, 1811.0], [18.7, 1814.0], [18.8, 1833.0], [18.9, 1835.0], [19.0, 1839.0], [19.1, 1843.0], [19.2, 1843.0], [19.3, 1844.0], [19.4, 1853.0], [19.5, 1868.0], [19.6, 1872.0], [19.7, 1894.0], [19.8, 1906.0], [19.9, 1907.0], [20.0, 1909.0], [20.1, 1911.0], [20.2, 1916.0], [20.3, 1921.0], [20.4, 1925.0], [20.5, 1930.0], [20.6, 1961.0], [20.7, 1962.0], [20.8, 1966.0], [20.9, 1977.0], [21.0, 1978.0], [21.1, 1984.0], [21.2, 1991.0], [21.3, 2013.0], [21.4, 2021.0], [21.5, 2022.0], [21.6, 2030.0], [21.7, 2034.0], [21.8, 2072.0], [21.9, 2080.0], [22.0, 2096.0], [22.1, 2104.0], [22.2, 2114.0], [22.3, 2120.0], [22.4, 2134.0], [22.5, 2151.0], [22.6, 2152.0], [22.7, 2165.0], [22.8, 2166.0], [22.9, 2188.0], [23.0, 2193.0], [23.1, 2204.0], [23.2, 2225.0], [23.3, 2226.0], [23.4, 2227.0], [23.5, 2231.0], [23.6, 2232.0], [23.7, 2247.0], [23.8, 2283.0], [23.9, 2286.0], [24.0, 2297.0], [24.1, 2299.0], [24.2, 2303.0], [24.3, 2311.0], [24.4, 2314.0], [24.5, 2319.0], [24.6, 2336.0], [24.7, 2341.0], [24.8, 2361.0], [24.9, 2363.0], [25.0, 2413.0], [25.1, 2448.0], [25.2, 2450.0], [25.3, 2470.0], [25.4, 2484.0], [25.5, 2484.0], [25.6, 2485.0], [25.7, 2493.0], [25.8, 2494.0], [25.9, 2499.0], [26.0, 2511.0], [26.1, 2512.0], [26.2, 2515.0], [26.3, 2524.0], [26.4, 2529.0], [26.5, 2530.0], [26.6, 2536.0], [26.7, 2542.0], [26.8, 2549.0], [26.9, 2557.0], [27.0, 2565.0], [27.1, 2568.0], [27.2, 2568.0], [27.3, 2570.0], [27.4, 2572.0], [27.5, 2576.0], [27.6, 2592.0], [27.7, 2593.0], [27.8, 2596.0], [27.9, 2612.0], [28.0, 2632.0], [28.1, 2635.0], [28.2, 2664.0], [28.3, 2675.0], [28.4, 2676.0], [28.5, 2677.0], [28.6, 2683.0], [28.7, 2706.0], [28.8, 2716.0], [28.9, 2739.0], [29.0, 2749.0], [29.1, 2751.0], [29.2, 2752.0], [29.3, 2762.0], [29.4, 2768.0], [29.5, 2774.0], [29.6, 2778.0], [29.7, 2784.0], [29.8, 2784.0], [29.9, 2787.0], [30.0, 2788.0], [30.1, 2795.0], [30.2, 2817.0], [30.3, 2836.0], [30.4, 2841.0], [30.5, 2845.0], [30.6, 2853.0], [30.7, 2855.0], [30.8, 2855.0], [30.9, 2860.0], [31.0, 2871.0], [31.1, 2872.0], [31.2, 2877.0], [31.3, 2900.0], [31.4, 2906.0], [31.5, 2910.0], [31.6, 2915.0], [31.7, 2917.0], [31.8, 2920.0], [31.9, 2938.0], [32.0, 2950.0], [32.1, 2951.0], [32.2, 2957.0], [32.3, 2970.0], [32.4, 2976.0], [32.5, 2995.0], [32.6, 2998.0], [32.7, 3014.0], [32.8, 3030.0], [32.9, 3090.0], [33.0, 3092.0], [33.1, 3096.0], [33.2, 3097.0], [33.3, 3103.0], [33.4, 3107.0], [33.5, 3127.0], [33.6, 3133.0], [33.7, 3158.0], [33.8, 3160.0], [33.9, 3175.0], [34.0, 3175.0], [34.1, 3188.0], [34.2, 3193.0], [34.3, 3199.0], [34.4, 3203.0], [34.5, 3204.0], [34.6, 3207.0], [34.7, 3212.0], [34.8, 3218.0], [34.9, 3241.0], [35.0, 3247.0], [35.1, 3253.0], [35.2, 3271.0], [35.3, 3286.0], [35.4, 3293.0], [35.5, 3306.0], [35.6, 3308.0], [35.7, 3312.0], [35.8, 3317.0], [35.9, 3324.0], [36.0, 3326.0], [36.1, 3366.0], [36.2, 3406.0], [36.3, 3439.0], [36.4, 3440.0], [36.5, 3441.0], [36.6, 3448.0], [36.7, 3458.0], [36.8, 3480.0], [36.9, 3504.0], [37.0, 3505.0], [37.1, 3512.0], [37.2, 3546.0], [37.3, 3551.0], [37.4, 3568.0], [37.5, 3584.0], [37.6, 3590.0], [37.7, 3593.0], [37.8, 3602.0], [37.9, 3604.0], [38.0, 3612.0], [38.1, 3629.0], [38.2, 3636.0], [38.3, 3657.0], [38.4, 3658.0], [38.5, 3687.0], [38.6, 3698.0], [38.7, 3701.0], [38.8, 3720.0], [38.9, 3722.0], [39.0, 3740.0], [39.1, 3749.0], [39.2, 3751.0], [39.3, 3757.0], [39.4, 3762.0], [39.5, 3777.0], [39.6, 3789.0], [39.7, 3799.0], [39.8, 3809.0], [39.9, 3834.0], [40.0, 3839.0], [40.1, 3850.0], [40.2, 3851.0], [40.3, 3857.0], [40.4, 3860.0], [40.5, 3866.0], [40.6, 3868.0], [40.7, 3872.0], [40.8, 3873.0], [40.9, 3888.0], [41.0, 3899.0], [41.1, 3926.0], [41.2, 3929.0], [41.3, 3930.0], [41.4, 3946.0], [41.5, 3959.0], [41.6, 3960.0], [41.7, 3976.0], [41.8, 3984.0], [41.9, 4003.0], [42.0, 4011.0], [42.1, 4013.0], [42.2, 4031.0], [42.3, 4039.0], [42.4, 4065.0], [42.5, 4102.0], [42.6, 4107.0], [42.7, 4122.0], [42.8, 4125.0], [42.9, 4131.0], [43.0, 4141.0], [43.1, 4150.0], [43.2, 4172.0], [43.3, 4179.0], [43.4, 4215.0], [43.5, 4228.0], [43.6, 4229.0], [43.7, 4230.0], [43.8, 4265.0], [43.9, 4267.0], [44.0, 4267.0], [44.1, 4270.0], [44.2, 4275.0], [44.3, 4276.0], [44.4, 4289.0], [44.5, 4292.0], [44.6, 4292.0], [44.7, 4305.0], [44.8, 4335.0], [44.9, 4354.0], [45.0, 4364.0], [45.1, 4382.0], [45.2, 4414.0], [45.3, 4420.0], [45.4, 4427.0], [45.5, 4436.0], [45.6, 4492.0], [45.7, 4524.0], [45.8, 4546.0], [45.9, 4549.0], [46.0, 4554.0], [46.1, 4608.0], [46.2, 4610.0], [46.3, 4723.0], [46.4, 4747.0], [46.5, 4747.0], [46.6, 4758.0], [46.7, 4766.0], [46.8, 4776.0], [46.9, 4785.0], [47.0, 4801.0], [47.1, 4830.0], [47.2, 4833.0], [47.3, 4845.0], [47.4, 4847.0], [47.5, 4850.0], [47.6, 4869.0], [47.7, 4871.0], [47.8, 4879.0], [47.9, 4880.0], [48.0, 4881.0], [48.1, 4882.0], [48.2, 4926.0], [48.3, 4930.0], [48.4, 4935.0], [48.5, 4967.0], [48.6, 5025.0], [48.7, 5044.0], [48.8, 5073.0], [48.9, 5086.0], [49.0, 5110.0], [49.1, 5132.0], [49.2, 5140.0], [49.3, 5184.0], [49.4, 5219.0], [49.5, 5227.0], [49.6, 5254.0], [49.7, 5280.0], [49.8, 5283.0], [49.9, 5289.0], [50.0, 5310.0], [50.1, 5310.0], [50.2, 5311.0], [50.3, 5347.0], [50.4, 5355.0], [50.5, 5404.0], [50.6, 5427.0], [50.7, 5432.0], [50.8, 5449.0], [50.9, 5470.0], [51.0, 5474.0], [51.1, 5512.0], [51.2, 5515.0], [51.3, 5524.0], [51.4, 5538.0], [51.5, 5635.0], [51.6, 5648.0], [51.7, 5707.0], [51.8, 5735.0], [51.9, 5821.0], [52.0, 5898.0], [52.1, 5899.0], [52.2, 5909.0], [52.3, 5944.0], [52.4, 5962.0], [52.5, 5965.0], [52.6, 5992.0], [52.7, 6013.0], [52.8, 6054.0], [52.9, 6060.0], [53.0, 6108.0], [53.1, 6110.0], [53.2, 6119.0], [53.3, 6151.0], [53.4, 6155.0], [53.5, 6180.0], [53.6, 6182.0], [53.7, 6191.0], [53.8, 6191.0], [53.9, 6214.0], [54.0, 6233.0], [54.1, 6234.0], [54.2, 6241.0], [54.3, 6242.0], [54.4, 6276.0], [54.5, 6353.0], [54.6, 6357.0], [54.7, 6425.0], [54.8, 6443.0], [54.9, 6461.0], [55.0, 6483.0], [55.1, 6503.0], [55.2, 6522.0], [55.3, 6535.0], [55.4, 6536.0], [55.5, 6536.0], [55.6, 6569.0], [55.7, 6599.0], [55.8, 6603.0], [55.9, 6623.0], [56.0, 6637.0], [56.1, 6666.0], [56.2, 6700.0], [56.3, 6716.0], [56.4, 6723.0], [56.5, 6741.0], [56.6, 6746.0], [56.7, 6763.0], [56.8, 6839.0], [56.9, 6855.0], [57.0, 6883.0], [57.1, 6892.0], [57.2, 6929.0], [57.3, 7005.0], [57.4, 7005.0], [57.5, 7049.0], [57.6, 7067.0], [57.7, 7084.0], [57.8, 7087.0], [57.9, 7096.0], [58.0, 7114.0], [58.1, 7151.0], [58.2, 7198.0], [58.3, 7200.0], [58.4, 7222.0], [58.5, 7242.0], [58.6, 7268.0], [58.7, 7276.0], [58.8, 7290.0], [58.9, 7299.0], [59.0, 7325.0], [59.1, 7325.0], [59.2, 7328.0], [59.3, 7353.0], [59.4, 7361.0], [59.5, 7372.0], [59.6, 7383.0], [59.7, 7386.0], [59.8, 7391.0], [59.9, 7392.0], [60.0, 7417.0], [60.1, 7437.0], [60.2, 7442.0], [60.3, 7462.0], [60.4, 7467.0], [60.5, 7475.0], [60.6, 7494.0], [60.7, 7496.0], [60.8, 7537.0], [60.9, 7544.0], [61.0, 7557.0], [61.1, 7589.0], [61.2, 7591.0], [61.3, 7603.0], [61.4, 7657.0], [61.5, 7674.0], [61.6, 7675.0], [61.7, 7680.0], [61.8, 7680.0], [61.9, 7745.0], [62.0, 7771.0], [62.1, 7774.0], [62.2, 7780.0], [62.3, 7789.0], [62.4, 7791.0], [62.5, 7807.0], [62.6, 7814.0], [62.7, 7851.0], [62.8, 7854.0], [62.9, 7860.0], [63.0, 7866.0], [63.1, 7870.0], [63.2, 7889.0], [63.3, 7896.0], [63.4, 7937.0], [63.5, 7986.0], [63.6, 7986.0], [63.7, 7996.0], [63.8, 8040.0], [63.9, 8081.0], [64.0, 8137.0], [64.1, 8145.0], [64.2, 8153.0], [64.3, 8207.0], [64.4, 8207.0], [64.5, 8211.0], [64.6, 8221.0], [64.7, 8251.0], [64.8, 8252.0], [64.9, 8263.0], [65.0, 8324.0], [65.1, 8364.0], [65.2, 8383.0], [65.3, 8383.0], [65.4, 8431.0], [65.5, 8441.0], [65.6, 8474.0], [65.7, 8502.0], [65.8, 8549.0], [65.9, 8550.0], [66.0, 8566.0], [66.1, 8579.0], [66.2, 8580.0], [66.3, 8621.0], [66.4, 8632.0], [66.5, 8697.0], [66.6, 8708.0], [66.7, 8732.0], [66.8, 8748.0], [66.9, 8759.0], [67.0, 8778.0], [67.1, 8815.0], [67.2, 8822.0], [67.3, 8823.0], [67.4, 8873.0], [67.5, 8908.0], [67.6, 8936.0], [67.7, 8983.0], [67.8, 9038.0], [67.9, 9160.0], [68.0, 9162.0], [68.1, 9167.0], [68.2, 9188.0], [68.3, 9253.0], [68.4, 9267.0], [68.5, 9316.0], [68.6, 9332.0], [68.7, 9337.0], [68.8, 9338.0], [68.9, 9360.0], [69.0, 9369.0], [69.1, 9458.0], [69.2, 9469.0], [69.3, 9478.0], [69.4, 9482.0], [69.5, 9488.0], [69.6, 9492.0], [69.7, 9497.0], [69.8, 9553.0], [69.9, 9578.0], [70.0, 9642.0], [70.1, 9790.0], [70.2, 9797.0], [70.3, 9804.0], [70.4, 9805.0], [70.5, 9819.0], [70.6, 9883.0], [70.7, 9887.0], [70.8, 9903.0], [70.9, 9910.0], [71.0, 9918.0], [71.1, 9928.0], [71.2, 9953.0], [71.3, 9969.0], [71.4, 10007.0], [71.5, 10025.0], [71.6, 10030.0], [71.7, 10041.0], [71.8, 10070.0], [71.9, 10077.0], [72.0, 10116.0], [72.1, 10126.0], [72.2, 10133.0], [72.3, 10151.0], [72.4, 10155.0], [72.5, 10178.0], [72.6, 10182.0], [72.7, 10190.0], [72.8, 10202.0], [72.9, 10204.0], [73.0, 10220.0], [73.1, 10253.0], [73.2, 10279.0], [73.3, 10307.0], [73.4, 10325.0], [73.5, 10340.0], [73.6, 10379.0], [73.7, 10387.0], [73.8, 10395.0], [73.9, 10439.0], [74.0, 10494.0], [74.1, 10502.0], [74.2, 10583.0], [74.3, 10592.0], [74.4, 10611.0], [74.5, 10615.0], [74.6, 10656.0], [74.7, 10662.0], [74.8, 10674.0], [74.9, 10675.0], [75.0, 10683.0], [75.1, 10693.0], [75.2, 10704.0], [75.3, 10710.0], [75.4, 10731.0], [75.5, 10753.0], [75.6, 10798.0], [75.7, 10798.0], [75.8, 10820.0], [75.9, 10823.0], [76.0, 10866.0], [76.1, 10877.0], [76.2, 10878.0], [76.3, 10892.0], [76.4, 10893.0], [76.5, 10933.0], [76.6, 10973.0], [76.7, 11040.0], [76.8, 11062.0], [76.9, 11166.0], [77.0, 11206.0], [77.1, 11223.0], [77.2, 11225.0], [77.3, 11275.0], [77.4, 11294.0], [77.5, 11312.0], [77.6, 11314.0], [77.7, 11355.0], [77.8, 11374.0], [77.9, 11375.0], [78.0, 11449.0], [78.1, 11453.0], [78.2, 11544.0], [78.3, 11559.0], [78.4, 11576.0], [78.5, 11581.0], [78.6, 11612.0], [78.7, 11643.0], [78.8, 11717.0], [78.9, 11748.0], [79.0, 11763.0], [79.1, 11774.0], [79.2, 11779.0], [79.3, 11780.0], [79.4, 11799.0], [79.5, 11928.0], [79.6, 11947.0], [79.7, 11960.0], [79.8, 11972.0], [79.9, 12029.0], [80.0, 12060.0], [80.1, 12066.0], [80.2, 12189.0], [80.3, 12255.0], [80.4, 12257.0], [80.5, 12260.0], [80.6, 12262.0], [80.7, 12302.0], [80.8, 12322.0], [80.9, 12347.0], [81.0, 12394.0], [81.1, 12409.0], [81.2, 12409.0], [81.3, 12421.0], [81.4, 12453.0], [81.5, 12464.0], [81.6, 12518.0], [81.7, 12574.0], [81.8, 12585.0], [81.9, 12604.0], [82.0, 12609.0], [82.1, 12621.0], [82.2, 12652.0], [82.3, 12657.0], [82.4, 12684.0], [82.5, 12739.0], [82.6, 12749.0], [82.7, 12817.0], [82.8, 12827.0], [82.9, 12831.0], [83.0, 12859.0], [83.1, 12908.0], [83.2, 12912.0], [83.3, 13017.0], [83.4, 13018.0], [83.5, 13043.0], [83.6, 13100.0], [83.7, 13102.0], [83.8, 13106.0], [83.9, 13116.0], [84.0, 13205.0], [84.1, 13209.0], [84.2, 13240.0], [84.3, 13274.0], [84.4, 13296.0], [84.5, 13325.0], [84.6, 13344.0], [84.7, 13402.0], [84.8, 13447.0], [84.9, 13462.0], [85.0, 13481.0], [85.1, 13527.0], [85.2, 13531.0], [85.3, 13575.0], [85.4, 13716.0], [85.5, 13723.0], [85.6, 13783.0], [85.7, 13827.0], [85.8, 13835.0], [85.9, 13841.0], [86.0, 13874.0], [86.1, 13888.0], [86.2, 13934.0], [86.3, 13973.0], [86.4, 13995.0], [86.5, 14034.0], [86.6, 14046.0], [86.7, 14050.0], [86.8, 14086.0], [86.9, 14127.0], [87.0, 14172.0], [87.1, 14197.0], [87.2, 14253.0], [87.3, 14256.0], [87.4, 14263.0], [87.5, 14289.0], [87.6, 14314.0], [87.7, 14315.0], [87.8, 14325.0], [87.9, 14473.0], [88.0, 14474.0], [88.1, 14485.0], [88.2, 14487.0], [88.3, 14629.0], [88.4, 14643.0], [88.5, 14695.0], [88.6, 14697.0], [88.7, 14796.0], [88.8, 14839.0], [88.9, 14878.0], [89.0, 14934.0], [89.1, 15009.0], [89.2, 15054.0], [89.3, 15062.0], [89.4, 15094.0], [89.5, 15133.0], [89.6, 15141.0], [89.7, 15201.0], [89.8, 15239.0], [89.9, 15302.0], [90.0, 15324.0], [90.1, 15388.0], [90.2, 15544.0], [90.3, 15583.0], [90.4, 15589.0], [90.5, 15607.0], [90.6, 15634.0], [90.7, 15662.0], [90.8, 15666.0], [90.9, 15707.0], [91.0, 15858.0], [91.1, 15974.0], [91.2, 16055.0], [91.3, 16064.0], [91.4, 16078.0], [91.5, 16132.0], [91.6, 16139.0], [91.7, 16157.0], [91.8, 16172.0], [91.9, 16257.0], [92.0, 16266.0], [92.1, 16295.0], [92.2, 16344.0], [92.3, 16348.0], [92.4, 16374.0], [92.5, 16506.0], [92.6, 16528.0], [92.7, 16547.0], [92.8, 16548.0], [92.9, 16550.0], [93.0, 16559.0], [93.1, 16604.0], [93.2, 16626.0], [93.3, 16685.0], [93.4, 16720.0], [93.5, 16735.0], [93.6, 16787.0], [93.7, 16822.0], [93.8, 16844.0], [93.9, 16917.0], [94.0, 16938.0], [94.1, 17043.0], [94.2, 17053.0], [94.3, 17080.0], [94.4, 17126.0], [94.5, 17138.0], [94.6, 17179.0], [94.7, 17227.0], [94.8, 17256.0], [94.9, 17345.0], [95.0, 17353.0], [95.1, 17412.0], [95.2, 17476.0], [95.3, 17481.0], [95.4, 17482.0], [95.5, 17529.0], [95.6, 17563.0], [95.7, 17575.0], [95.8, 17578.0], [95.9, 17641.0], [96.0, 17741.0], [96.1, 17870.0], [96.2, 17900.0], [96.3, 17931.0], [96.4, 17983.0], [96.5, 18148.0], [96.6, 18240.0], [96.7, 18375.0], [96.8, 18553.0], [96.9, 18652.0], [97.0, 18725.0], [97.1, 18764.0], [97.2, 18807.0], [97.3, 18836.0], [97.4, 18991.0], [97.5, 19048.0], [97.6, 19119.0], [97.7, 19204.0], [97.8, 19206.0], [97.9, 19227.0], [98.0, 19252.0], [98.1, 19324.0], [98.2, 19407.0], [98.3, 19503.0], [98.4, 19590.0], [98.5, 19835.0], [98.6, 19874.0], [98.7, 19937.0], [98.8, 19953.0], [98.9, 20034.0], [99.0, 20076.0], [99.1, 20218.0], [99.2, 20316.0], [99.3, 20362.0], [99.4, 20379.0], [99.5, 20472.0], [99.6, 20706.0], [99.7, 21244.0], [99.8, 21512.0], [99.9, 21934.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 998.0, "series": [{"data": [[0.0, 998.0], [100.0, 2.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[200.0, 12.0], [300.0, 15.0], [400.0, 23.0], [500.0, 24.0], [600.0, 21.0], [700.0, 33.0], [800.0, 21.0], [900.0, 19.0], [1000.0, 21.0], [1100.0, 15.0], [1200.0, 19.0], [1300.0, 12.0], [1400.0, 11.0], [1500.0, 13.0], [1600.0, 8.0], [1700.0, 13.0], [1800.0, 15.0], [1900.0, 13.0], [2000.0, 14.0], [2100.0, 6.0], [2300.0, 9.0], [2200.0, 9.0], [2400.0, 9.0], [2500.0, 10.0], [2600.0, 13.0], [2800.0, 11.0], [2700.0, 9.0], [2900.0, 11.0], [3000.0, 8.0], [3100.0, 7.0], [3300.0, 10.0], [3200.0, 11.0], [3400.0, 2.0], [3500.0, 10.0], [3600.0, 6.0], [3700.0, 8.0], [3800.0, 4.0], [3900.0, 6.0], [4000.0, 10.0], [4200.0, 5.0], [4300.0, 6.0], [4100.0, 8.0], [4600.0, 9.0], [4500.0, 6.0], [4400.0, 4.0], [4700.0, 7.0], [4800.0, 4.0], [5100.0, 10.0], [5000.0, 10.0], [5300.0, 8.0], [5200.0, 5.0], [5500.0, 5.0], [5400.0, 5.0], [5600.0, 8.0], [5700.0, 5.0], [5800.0, 6.0], [6100.0, 2.0], [6000.0, 5.0], [5900.0, 7.0], [6300.0, 5.0], [6200.0, 5.0], [6600.0, 6.0], [6500.0, 6.0], [6400.0, 4.0], [6700.0, 6.0], [6800.0, 4.0], [6900.0, 4.0], [7100.0, 4.0], [7000.0, 3.0], [7300.0, 5.0], [7200.0, 2.0], [7400.0, 2.0], [7500.0, 4.0], [7600.0, 3.0], [7800.0, 4.0], [7900.0, 4.0], [7700.0, 6.0], [8000.0, 4.0], [8100.0, 3.0], [8300.0, 4.0], [8700.0, 3.0], [8400.0, 5.0], [8500.0, 3.0], [8600.0, 6.0], [8200.0, 3.0], [9000.0, 3.0], [9200.0, 1.0], [8800.0, 4.0], [9100.0, 3.0], [8900.0, 4.0], [9400.0, 8.0], [9700.0, 3.0], [9300.0, 4.0], [9600.0, 3.0], [9500.0, 3.0], [10000.0, 3.0], [9800.0, 4.0], [10100.0, 5.0], [9900.0, 4.0], [10200.0, 1.0], [10300.0, 2.0], [10500.0, 4.0], [10400.0, 1.0], [10700.0, 3.0], [10600.0, 1.0], [11000.0, 3.0], [10900.0, 2.0], [10800.0, 1.0], [11100.0, 3.0], [11200.0, 4.0], [11600.0, 3.0], [11700.0, 4.0], [11400.0, 4.0], [11500.0, 1.0], [11300.0, 2.0], [12000.0, 7.0], [12200.0, 3.0], [11800.0, 5.0], [12100.0, 1.0], [12600.0, 5.0], [12300.0, 2.0], [12700.0, 2.0], [12500.0, 2.0], [12400.0, 1.0], [12900.0, 2.0], [13100.0, 3.0], [13000.0, 6.0], [13200.0, 1.0], [13500.0, 4.0], [13400.0, 5.0], [13800.0, 4.0], [13700.0, 2.0], [13600.0, 3.0], [13900.0, 3.0], [14300.0, 5.0], [14200.0, 4.0], [14000.0, 3.0], [14100.0, 1.0], [14800.0, 3.0], [14700.0, 2.0], [14400.0, 4.0], [14600.0, 3.0], [15300.0, 2.0], [15100.0, 4.0], [15200.0, 1.0], [15000.0, 2.0], [14900.0, 4.0], [15800.0, 5.0], [15500.0, 2.0], [15400.0, 1.0], [15700.0, 3.0], [16000.0, 6.0], [15900.0, 3.0], [16300.0, 3.0], [16100.0, 1.0], [16200.0, 1.0], [16600.0, 3.0], [16400.0, 5.0], [16800.0, 3.0], [17000.0, 2.0], [17400.0, 3.0], [17200.0, 5.0], [17300.0, 1.0], [16700.0, 1.0], [16500.0, 3.0], [16900.0, 2.0], [17900.0, 4.0], [17800.0, 4.0], [18200.0, 3.0], [18400.0, 1.0], [17600.0, 2.0], [17700.0, 1.0], [18100.0, 1.0], [18500.0, 1.0], [18700.0, 1.0], [18900.0, 3.0], [19300.0, 3.0], [19200.0, 1.0], [19500.0, 1.0], [19700.0, 1.0], [19600.0, 1.0], [19900.0, 1.0], [20000.0, 1.0], [20700.0, 2.0], [20600.0, 1.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[0.0, 12.0], [100.0, 7.0], [200.0, 10.0], [300.0, 7.0], [400.0, 9.0], [500.0, 10.0], [600.0, 13.0], [700.0, 16.0], [800.0, 7.0], [900.0, 13.0], [1000.0, 6.0], [1100.0, 8.0], [1200.0, 13.0], [1300.0, 8.0], [1400.0, 13.0], [1500.0, 12.0], [1600.0, 7.0], [1700.0, 14.0], [1800.0, 12.0], [1900.0, 15.0], [2000.0, 8.0], [2100.0, 10.0], [2300.0, 8.0], [2200.0, 11.0], [2400.0, 10.0], [2500.0, 19.0], [2600.0, 8.0], [2700.0, 15.0], [2800.0, 11.0], [2900.0, 14.0], [3000.0, 6.0], [3100.0, 11.0], [3200.0, 11.0], [3300.0, 7.0], [3400.0, 7.0], [3500.0, 9.0], [3600.0, 9.0], [3700.0, 11.0], [3800.0, 13.0], [3900.0, 8.0], [4000.0, 6.0], [4100.0, 9.0], [4300.0, 5.0], [4200.0, 13.0], [4400.0, 5.0], [4600.0, 2.0], [4500.0, 4.0], [4700.0, 7.0], [4800.0, 12.0], [5100.0, 4.0], [5000.0, 4.0], [4900.0, 4.0], [5200.0, 6.0], [5300.0, 5.0], [5400.0, 6.0], [5500.0, 4.0], [5600.0, 2.0], [5700.0, 2.0], [5800.0, 3.0], [6100.0, 9.0], [6000.0, 3.0], [5900.0, 5.0], [6300.0, 2.0], [6200.0, 6.0], [6600.0, 4.0], [6500.0, 7.0], [6400.0, 4.0], [6700.0, 6.0], [6800.0, 4.0], [6900.0, 1.0], [7000.0, 7.0], [7100.0, 3.0], [7300.0, 10.0], [7200.0, 7.0], [7400.0, 8.0], [7500.0, 5.0], [7600.0, 6.0], [7800.0, 9.0], [7700.0, 6.0], [7900.0, 4.0], [8000.0, 2.0], [8100.0, 3.0], [8300.0, 4.0], [8400.0, 3.0], [8700.0, 5.0], [8600.0, 3.0], [8200.0, 7.0], [8500.0, 6.0], [9100.0, 4.0], [8900.0, 3.0], [8800.0, 4.0], [9200.0, 2.0], [9000.0, 1.0], [9300.0, 6.0], [9400.0, 7.0], [9600.0, 1.0], [9700.0, 2.0], [9500.0, 2.0], [10200.0, 5.0], [9800.0, 5.0], [10100.0, 8.0], [10000.0, 6.0], [9900.0, 6.0], [10700.0, 7.0], [10300.0, 6.0], [10500.0, 3.0], [10600.0, 8.0], [10400.0, 2.0], [11000.0, 2.0], [10900.0, 2.0], [11200.0, 5.0], [11100.0, 1.0], [10800.0, 7.0], [11500.0, 4.0], [11700.0, 7.0], [11600.0, 2.0], [11300.0, 5.0], [11400.0, 2.0], [12000.0, 3.0], [12200.0, 4.0], [11900.0, 4.0], [12100.0, 1.0], [12400.0, 5.0], [12500.0, 3.0], [12600.0, 6.0], [12300.0, 4.0], [12700.0, 2.0], [13200.0, 5.0], [13100.0, 4.0], [12900.0, 2.0], [13000.0, 3.0], [13300.0, 2.0], [12800.0, 4.0], [13500.0, 3.0], [13700.0, 3.0], [13800.0, 5.0], [13400.0, 4.0], [14300.0, 3.0], [14000.0, 4.0], [13900.0, 3.0], [14200.0, 4.0], [14100.0, 3.0], [14600.0, 4.0], [14700.0, 1.0], [14400.0, 4.0], [14800.0, 2.0], [14900.0, 1.0], [15000.0, 4.0], [15300.0, 3.0], [15200.0, 2.0], [15100.0, 2.0], [15600.0, 4.0], [15800.0, 1.0], [15500.0, 3.0], [15700.0, 1.0], [16000.0, 3.0], [16200.0, 3.0], [16100.0, 4.0], [16300.0, 3.0], [15900.0, 1.0], [17400.0, 4.0], [16800.0, 2.0], [17000.0, 3.0], [16600.0, 3.0], [17200.0, 2.0], [17600.0, 1.0], [17800.0, 1.0], [18200.0, 1.0], [18800.0, 2.0], [19200.0, 4.0], [18600.0, 1.0], [19000.0, 1.0], [19400.0, 1.0], [19800.0, 2.0], [20000.0, 2.0], [20200.0, 1.0], [20400.0, 1.0], [21200.0, 1.0], [16500.0, 6.0], [17300.0, 2.0], [16700.0, 3.0], [16900.0, 2.0], [17100.0, 3.0], [17500.0, 4.0], [17700.0, 1.0], [17900.0, 3.0], [18300.0, 1.0], [18100.0, 1.0], [18500.0, 1.0], [19300.0, 1.0], [19100.0, 1.0], [18700.0, 2.0], [18900.0, 1.0], [19500.0, 2.0], [19900.0, 2.0], [20300.0, 3.0], [21500.0, 1.0], [20700.0, 1.0], [21900.0, 1.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 96.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1602.0, "series": [{"data": [[0.0, 96.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 302.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1602.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1000.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 520.7610000000025, "minX": 1.7412915E12, "maxY": 520.7610000000025, "series": [{"data": [[1.7412915E12, 520.7610000000025]], "isOverall": false, "label": "User Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7412915E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 20703.333333333332, "series": [{"data": [[2.0, 6.0], [4.0, 6.5], [5.0, 4.0], [6.0, 4.0], [7.0, 5.0], [8.0, 5.0], [9.0, 3.0], [10.0, 4.0], [11.0, 6.0], [12.0, 2.0], [13.0, 3.0], [14.0, 4.0], [15.0, 7.0], [16.0, 3.0], [18.0, 3.0], [19.0, 5.0], [20.0, 4.0], [21.0, 2.0], [22.0, 3.0], [24.0, 5.5], [25.0, 5.0], [26.0, 2.0], [27.0, 6.0], [28.0, 4.0], [29.0, 8.0], [30.0, 11.0], [31.0, 5.0], [33.0, 4.0], [32.0, 8.0], [35.0, 3.0], [34.0, 5.0], [37.0, 3.0], [36.0, 3.0], [39.0, 5.0], [38.0, 5.0], [41.0, 4.0], [40.0, 5.0], [43.0, 2.0], [42.0, 3.0], [45.0, 1.0], [44.0, 3.0], [47.0, 7.0], [46.0, 3.0], [49.0, 3.0], [48.0, 5.0], [51.0, 8.0], [50.0, 3.0], [53.0, 4.0], [52.0, 5.0], [54.0, 8.0], [56.0, 8.0], [59.0, 6.0], [58.0, 8.5], [61.0, 3.0], [60.0, 6.0], [63.0, 16.0], [62.0, 6.0], [67.0, 29.0], [66.0, 29.0], [65.0, 34.0], [64.0, 7.0], [71.0, 3.5], [70.0, 4.0], [68.0, 16.0], [75.0, 16.0], [74.0, 3.5], [72.0, 9.0], [79.0, 32.0], [78.0, 4.0], [77.0, 5.0], [76.0, 8.0], [83.0, 56.0], [82.0, 15.0], [81.0, 13.0], [86.0, 6.0], [85.0, 8.0], [84.0, 12.0], [90.0, 13.0], [89.0, 3.0], [88.0, 6.0], [95.0, 9.0], [94.0, 12.0], [93.0, 11.5], [92.0, 11.0], [98.0, 10.0], [97.0, 7.5], [103.0, 4.0], [102.0, 18.0], [101.0, 17.0], [100.0, 10.0], [106.0, 6.0], [104.0, 9.0], [111.0, 4.0], [110.0, 4.0], [109.0, 5.0], [108.0, 6.0], [115.0, 4.0], [114.0, 2.0], [113.0, 3.0], [112.0, 1.0], [119.0, 6.0], [118.0, 4.0], [117.0, 6.0], [116.0, 6.0], [123.0, 4.0], [122.0, 4.0], [121.0, 6.0], [120.0, 3.0], [127.0, 6.0], [125.0, 4.0], [124.0, 4.0], [135.0, 9.0], [133.0, 7.0], [131.0, 15.0], [130.0, 12.0], [129.0, 3.0], [128.0, 10.0], [143.0, 3.0], [142.0, 4.0], [140.0, 8.0], [139.0, 7.0], [137.0, 4.0], [136.0, 5.0], [151.0, 18.0], [150.0, 17.0], [149.0, 16.0], [148.0, 3.5], [146.0, 4.0], [145.0, 3.0], [144.0, 2.0], [159.0, 9.0], [158.0, 15.0], [157.0, 8.0], [156.0, 5.0], [155.0, 4.0], [154.0, 8.0], [152.0, 11.0], [167.0, 4.0], [166.0, 2.0], [165.0, 5.0], [164.0, 8.0], [163.0, 7.0], [162.0, 9.0], [161.0, 26.0], [175.0, 5.0], [174.0, 5.0], [173.0, 8.0], [172.0, 2.0], [171.0, 3.0], [169.0, 2.0], [168.0, 14.0], [183.0, 5.0], [182.0, 3.0], [180.0, 3.5], [178.0, 6.0], [177.0, 3.0], [176.0, 4.0], [191.0, 6.5], [189.0, 3.0], [188.0, 3.0], [187.0, 3.0], [186.0, 2.0], [185.0, 3.0], [184.0, 10.0], [198.0, 9.0], [197.0, 6.0], [196.0, 2.0], [195.0, 4.5], [193.0, 2.0], [192.0, 5.0], [207.0, 4.0], [205.0, 6.0], [204.0, 6.5], [202.0, 6.0], [201.0, 23.0], [200.0, 8.5], [215.0, 4.0], [214.0, 2.0], [213.0, 2.0], [212.0, 4.0], [210.0, 2.0], [209.0, 3.0], [208.0, 4.0], [223.0, 13.0], [222.0, 16.0], [221.0, 17.0], [220.0, 18.5], [218.0, 20.0], [217.0, 3.0], [216.0, 3.0], [231.0, 9.0], [230.0, 1.5], [228.0, 8.0], [227.0, 7.5], [225.0, 9.0], [224.0, 12.0], [239.0, 3.0], [238.0, 5.0], [237.0, 2.0], [236.0, 5.5], [234.0, 8.0], [233.0, 4.0], [232.0, 5.0], [247.0, 15.0], [246.0, 19.0], [245.0, 22.0], [244.0, 10.0], [242.0, 9.0], [241.0, 10.0], [240.0, 17.0], [255.0, 3.0], [254.0, 5.0], [253.0, 7.0], [251.0, 3.0], [250.0, 7.0], [249.0, 6.0], [248.0, 11.0], [271.0, 2.0], [267.0, 56.0], [270.0, 3.0], [269.0, 11.0], [268.0, 3.5], [266.0, 4.0], [265.0, 3.0], [264.0, 3.5], [262.0, 4.25], [257.0, 4.0], [256.0, 2.0], [259.0, 4.0], [273.0, 19.0], [274.0, 9.333333333333334], [272.0, 21.0], [287.0, 2.0], [285.0, 3.0], [284.0, 3.0], [275.0, 6.0], [282.0, 2.0], [280.0, 4.0], [279.0, 4.0], [278.0, 1.0], [277.0, 3.0], [276.0, 4.0], [302.0, 3.0], [294.0, 18.0], [292.0, 7.0], [303.0, 4.0], [301.0, 2.0], [300.0, 3.0], [299.0, 4.0], [298.0, 3.5], [296.0, 4.0], [295.0, 4.0], [289.0, 5.0], [288.0, 1.0], [318.0, 2.0], [319.0, 5.0], [317.0, 5.0], [316.0, 6.0], [315.0, 2.0], [314.0, 3.0], [313.0, 12.0], [312.0, 5.0], [311.0, 7.0], [304.0, 4.0], [306.0, 4.0], [305.0, 3.0], [310.0, 11.0], [309.0, 8.0], [308.0, 5.5], [332.0, 5.0], [334.0, 10.0], [335.0, 8.0], [333.0, 11.0], [331.0, 6.0], [330.0, 6.0], [327.0, 13.0], [320.0, 3.0], [323.0, 3.0], [321.0, 4.0], [326.0, 2.5], [324.0, 4.0], [349.0, 3.0], [343.0, 11.333333333333334], [351.0, 6.333333333333333], [348.0, 6.0], [339.0, 7.0], [338.0, 27.0], [337.0, 6.5], [347.0, 7.0], [346.0, 3.0], [345.0, 5.0], [344.0, 10.0], [341.0, 5.0], [340.0, 16.0], [365.0, 13.0], [353.0, 5.5], [367.0, 4.333333333333333], [364.0, 5.0], [355.0, 3.0], [354.0, 4.0], [363.0, 8.0], [362.0, 6.0], [361.0, 4.0], [360.0, 3.0], [359.0, 4.0], [352.0, 3.0], [358.0, 4.0], [357.0, 2.0], [356.0, 4.0], [383.0, 13.0], [382.0, 3.0], [371.0, 2.0], [370.0, 4.0], [369.0, 2.0], [368.0, 3.0], [379.0, 6.0], [378.0, 4.0], [377.0, 2.0], [376.0, 3.0], [374.0, 4.0], [373.0, 5.0], [372.0, 6.0], [396.0, 2.0], [399.0, 4.0], [389.0, 5.5], [395.0, 44.0], [398.0, 3.0], [394.0, 3.0], [393.0, 3.0], [390.0, 4.0], [384.0, 26.0], [386.0, 7.0], [385.0, 7.0], [388.0, 4.5], [403.0, 10.0], [415.0, 5.5], [414.0, 4.75], [411.0, 6.0], [410.0, 3.0], [408.0, 4.0], [407.0, 32.0], [406.0, 4.0], [404.0, 6.0], [402.0, 11.0], [401.0, 61.0], [400.0, 24.0], [430.0, 13.0], [431.0, 5.0], [428.0, 3.0], [419.0, 5.0], [418.0, 10.0], [417.0, 17.0], [416.0, 2.0], [427.0, 5.0], [426.0, 5.0], [425.0, 3.0], [424.0, 2.0], [423.0, 6.0], [422.0, 3.3333333333333335], [445.0, 5.0], [446.0, 3.0], [444.0, 3.0], [443.0, 5.0], [442.0, 3.0], [441.0, 4.25], [437.0, 3.0], [436.0, 6.333333333333333], [433.0, 8.0], [432.0, 11.0], [450.0, 4.0], [458.0, 47.333333333333336], [462.0, 24.5], [459.0, 12.0], [455.0, 62.0], [454.0, 2.0], [453.0, 3.0], [452.0, 3.0], [449.0, 3.0], [448.0, 4.0], [476.0, 4.0], [478.0, 3.0], [471.0, 6.0], [465.0, 22.0], [464.0, 21.0], [467.0, 20.0], [466.0, 24.0], [479.0, 4.0], [477.0, 4.0], [474.0, 2.5], [472.0, 3.5], [470.0, 7.0], [469.0, 3.0], [468.0, 3.0], [483.0, 17.0], [493.0, 6.0], [495.0, 5.5], [492.0, 3.0], [489.0, 10.0], [488.0, 11.0], [486.0, 4.0], [480.0, 3.0], [482.0, 3.0], [481.0, 5.0], [485.0, 3.0], [484.0, 7.0], [496.0, 8.0], [509.0, 4.0], [511.0, 6.5], [508.0, 4.0], [498.0, 6.0], [497.0, 7.5], [506.0, 6.0], [505.0, 7.0], [503.0, 3.0], [502.0, 4.0], [501.0, 3.0], [500.0, 5.0], [541.0, 12.333333333333334], [512.0, 7.5], [513.0, 4.0], [517.0, 8.0], [516.0, 7.5], [527.0, 12.0], [525.0, 30.5], [523.0, 33.0], [522.0, 35.0], [521.0, 2.0], [520.0, 15.0], [518.0, 7.0], [528.0, 6.0], [529.0, 13.25], [532.0, 16.0], [531.0, 20.0], [543.0, 7.5], [538.0, 12.5], [536.0, 9.0], [519.0, 3.0], [535.0, 10.0], [534.0, 14.5], [574.0, 4.0], [564.0, 4.0], [575.0, 6.0], [561.0, 3.0], [560.0, 9.5], [563.0, 4.0], [562.0, 4.0], [572.0, 3.0], [571.0, 2.6666666666666665], [570.0, 3.0], [551.0, 3.0], [550.0, 4.0], [549.0, 3.0], [548.0, 3.0], [547.0, 5.0], [546.0, 5.0], [545.0, 5.5], [556.0, 3.0], [554.0, 5.0], [553.0, 6.0], [552.0, 25.0], [567.0, 2.0], [566.0, 3.0], [565.0, 3.0], [601.0, 6.0], [577.0, 6.5], [589.0, 5.666666666666667], [587.0, 9.0], [585.0, 8.0], [584.0, 12.0], [590.0, 3.0], [576.0, 4.0], [596.0, 9.5], [595.0, 10.333333333333334], [602.0, 6.5], [603.0, 6.0], [605.0, 3.0], [604.0, 4.0], [600.0, 6.5], [583.0, 102.0], [581.0, 81.0], [580.0, 78.0], [579.0, 4.0], [578.0, 10.0], [599.0, 9.0], [598.0, 15.5], [607.0, 11.0], [593.0, 7.0], [592.0, 3.5], [606.0, 5.0], [633.0, 12.0], [638.0, 8.0], [613.0, 6.0], [611.0, 4.0], [610.0, 7.0], [609.0, 7.0], [608.0, 8.0], [615.0, 3.0], [614.0, 5.0], [623.0, 7.0], [622.0, 5.0], [621.0, 4.0], [620.0, 5.5], [618.0, 5.5], [616.0, 3.0], [639.0, 3.0], [624.0, 5.0], [627.0, 24.0], [626.0, 8.0], [636.0, 10.0], [635.0, 10.0], [634.0, 10.0], [631.0, 16.666666666666668], [628.0, 23.0], [647.0, 6.0], [668.0, 2.0], [640.0, 5.0], [655.0, 23.0], [654.0, 8.0], [653.0, 2.0], [652.0, 12.0], [651.0, 17.0], [650.0, 3.0], [649.0, 6.0], [641.0, 3.6666666666666665], [670.0, 3.5], [671.0, 5.0], [657.0, 6.0], [656.0, 6.0], [659.0, 2.0], [658.0, 4.0], [663.0, 8.666666666666666], [661.0, 10.0], [669.0, 2.0], [667.0, 3.0], [666.0, 4.0], [664.0, 6.0], [646.0, 5.0], [644.0, 8.0], [643.0, 9.0], [642.0, 9.0], [679.0, 3.0], [701.0, 3.0], [683.0, 6.0], [682.0, 10.0], [681.0, 9.0], [680.0, 3.0], [684.0, 9.5], [686.0, 10.0], [685.0, 8.0], [702.0, 4.0], [690.0, 7.0], [689.0, 8.0], [699.0, 4.0], [698.0, 2.5], [696.0, 13.0], [678.0, 4.0], [677.0, 5.0], [676.0, 7.0], [675.0, 4.0], [674.0, 2.0], [672.0, 4.0], [687.0, 9.0], [695.0, 4.0], [694.0, 7.0], [693.0, 4.5], [691.0, 2.0], [729.0, 4.666666666666667], [705.0, 9.5], [706.0, 9.0], [708.0, 10.0], [707.0, 11.0], [710.0, 5.0], [709.0, 2.0], [728.0, 4.0], [711.0, 16.0], [713.0, 6.0], [712.0, 5.0], [714.0, 6.0], [719.0, 8.0], [704.0, 4.0], [718.0, 15.0], [717.0, 16.0], [716.0, 3.0], [732.0, 6.5], [733.0, 9.0], [731.0, 6.0], [730.0, 6.5], [735.0, 7.0], [720.0, 8.0], [723.0, 8.0], [722.0, 6.0], [725.0, 3.0], [724.0, 6.5], [727.0, 4.0], [726.0, 8.0], [734.0, 8.0], [743.0, 4.0], [765.0, 5.0], [750.0, 5.0], [749.0, 4.0], [748.0, 3.0], [746.0, 6.0], [745.0, 6.0], [744.0, 4.0], [754.0, 4.0], [753.0, 3.0], [752.0, 4.0], [755.0, 2.0], [767.0, 3.0], [766.0, 4.0], [763.0, 3.0], [762.0, 5.5], [760.0, 9.0], [742.0, 7.0], [741.0, 9.0], [740.0, 11.0], [739.0, 3.0], [738.0, 4.0], [737.0, 7.0], [736.0, 4.0], [751.0, 4.5], [759.0, 4.5], [757.0, 8.0], [796.0, 2.0], [768.0, 14.5], [774.0, 13.0], [772.0, 3.0], [771.0, 7.0], [770.0, 5.0], [793.0, 13.5], [775.0, 68.0], [777.0, 4.333333333333333], [778.0, 3.0], [780.0, 3.0], [779.0, 6.0], [783.0, 4.0], [782.0, 4.5], [799.0, 5.0], [786.0, 4.0], [785.0, 4.0], [791.0, 5.5], [789.0, 3.6666666666666665], [798.0, 7.0], [797.0, 3.0], [795.0, 9.0], [794.0, 13.0], [807.0, 5.5], [802.0, 5.5], [800.0, 4.0], [804.0, 5.666666666666667], [806.0, 5.0], [805.0, 2.0], [803.0, 3.6666666666666665], [808.0, 4.5], [810.0, 6.0], [812.0, 4.0], [811.0, 5.0], [814.0, 29.0], [813.0, 4.0], [815.0, 25.0], [825.0, 10.5], [824.0, 9.0], [827.0, 2.5], [831.0, 3.0], [819.0, 8.333333333333334], [816.0, 3.0], [821.0, 5.0], [820.0, 7.0], [823.0, 4.0], [822.0, 8.0], [830.0, 4.0], [829.0, 3.0], [828.0, 2.0], [862.0, 3.0], [847.0, 9.666666666666666], [845.0, 14.0], [844.0, 3.0], [842.0, 4.0], [841.0, 3.0], [840.0, 5.0], [856.0, 4.0], [839.0, 7.0], [838.0, 4.0], [837.0, 5.0], [834.0, 3.0], [833.0, 5.0], [832.0, 7.0], [852.0, 3.0], [855.0, 6.666666666666667], [854.0, 3.0], [853.0, 5.5], [857.0, 8.0], [863.0, 3.0], [848.0, 6.0], [851.0, 5.0], [850.0, 6.0], [861.0, 38.5], [859.0, 7.0], [858.0, 7.0], [889.0, 4.0], [893.0, 4.0], [894.0, 3.0], [881.0, 3.0], [880.0, 5.0], [883.0, 4.0], [882.0, 2.0], [892.0, 2.0], [891.0, 3.0], [890.0, 3.0], [888.0, 2.0], [871.0, 3.0], [870.0, 4.0], [869.0, 3.0], [867.0, 5.0], [866.0, 4.0], [865.0, 5.0], [864.0, 3.0], [879.0, 8.0], [878.0, 5.0], [876.0, 4.0], [875.0, 5.0], [874.0, 8.0], [873.0, 5.0], [872.0, 11.0], [887.0, 6.5], [885.0, 3.0], [920.0, 6.0], [924.0, 4.0], [908.0, 4.5], [907.0, 5.0], [906.0, 8.0], [905.0, 4.0], [904.0, 6.0], [909.0, 6.0], [911.0, 101.0], [897.0, 3.0], [896.0, 5.0], [899.0, 4.0], [898.0, 25.0], [901.0, 4.0], [900.0, 7.0], [903.0, 3.0], [902.0, 7.0], [910.0, 5.0], [917.0, 5.0], [919.0, 4.0], [918.0, 4.0], [926.0, 25.0], [927.0, 30.5], [913.0, 95.0], [912.0, 44.0], [915.0, 15.0], [914.0, 27.0], [925.0, 7.0], [923.0, 5.0], [922.0, 5.0], [921.0, 6.0], [1.0, 4.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[475.4810000000007, 7.890000000000006]], "isOverall": false, "label": "16 Get Stock Prices Request-Aggregated", "isController": false}, {"data": [[39.0, 17948.5], [61.0, 18094.333333333332], [71.0, 17818.0], [94.0, 267.0], [102.0, 358.0], [101.0, 17881.0], [106.0, 386.0], [110.0, 17763.0], [112.0, 461.5], [113.0, 8722.5], [114.0, 6214.333333333333], [115.0, 437.0], [116.0, 500.0], [118.0, 9493.5], [120.0, 8518.0], [122.0, 9378.25], [125.0, 588.5], [126.0, 448.75], [129.0, 20703.333333333332], [128.0, 16610.5], [136.0, 680.0], [138.0, 491.6666666666667], [139.0, 9001.5], [142.0, 235.0], [143.0, 15747.0], [137.0, 15524.0], [146.0, 623.6666666666666], [148.0, 5808.666666666667], [150.0, 471.0], [144.0, 16775.0], [152.0, 431.0], [153.0, 480.0], [157.0, 221.0], [155.0, 16644.0], [161.0, 588.5], [162.0, 689.0], [165.0, 703.8], [167.0, 212.0], [171.0, 664.2], [172.0, 5997.666666666667], [175.0, 16371.0], [173.0, 17493.0], [168.0, 15367.0], [178.0, 200.0], [180.0, 851.0], [181.0, 514.0], [182.0, 8457.0], [184.0, 1103.0], [188.0, 8476.5], [197.0, 17457.0], [196.0, 16200.0], [192.0, 17770.0], [200.0, 973.0], [204.0, 865.0], [201.0, 16995.0], [209.0, 3821.8], [211.0, 724.0], [212.0, 894.0], [213.0, 15997.0], [208.0, 17110.0], [221.0, 980.1666666666666], [222.0, 792.0], [223.0, 847.0], [216.0, 15878.0], [224.0, 1390.0], [225.0, 974.0], [226.0, 947.5], [228.0, 1021.0], [230.0, 758.0], [236.0, 6313.666666666667], [239.0, 17190.666666666668], [233.0, 15987.0], [245.0, 952.0], [246.0, 983.0], [247.0, 14709.333333333334], [248.0, 8439.5], [250.0, 11916.333333333334], [251.0, 879.3333333333334], [252.0, 1281.0], [255.0, 1129.0], [259.0, 430.0], [261.0, 798.0], [262.0, 872.0], [268.0, 850.6666666666666], [271.0, 1333.6666666666667], [272.0, 1214.0], [275.0, 1601.0], [276.0, 769.0], [277.0, 7810.0], [279.0, 784.5], [282.0, 1120.0], [284.0, 14476.0], [291.0, 728.0], [296.0, 12686.444444444445], [294.0, 15100.0], [306.0, 1372.0], [304.0, 1222.0], [307.0, 8159.5], [312.0, 333.0], [313.0, 1542.5], [317.0, 1136.2], [309.0, 15379.5], [308.0, 15876.333333333334], [305.0, 14038.0], [322.0, 472.0], [325.0, 452.0], [327.0, 843.0], [328.0, 2039.0], [333.0, 1138.5], [335.0, 1026.5], [326.0, 14540.0], [323.0, 19260.0], [339.0, 1763.0], [347.0, 5448.714285714285], [351.0, 1112.0], [344.0, 14106.0], [364.0, 930.0], [352.0, 1160.0], [353.0, 7558.0], [358.0, 1953.0], [357.0, 15951.0], [363.0, 1113.0], [365.0, 1668.5], [367.0, 9775.0], [362.0, 13086.0], [361.0, 18990.0], [360.0, 14992.666666666666], [372.0, 1967.0], [373.0, 1335.0], [382.0, 18745.0], [378.0, 13640.0], [371.0, 15663.5], [387.0, 1995.0], [388.0, 10989.5], [395.0, 761.0], [394.0, 12842.5], [389.0, 18534.0], [384.0, 13463.0], [401.0, 4226.833333333333], [402.0, 1943.5], [404.0, 1303.0], [409.0, 1582.0], [415.0, 14019.333333333334], [410.0, 14257.0], [408.0, 13350.333333333334], [406.0, 13622.5], [423.0, 1290.0], [419.0, 1878.0], [422.0, 2099.0], [426.0, 1501.5], [429.0, 1687.0], [430.0, 2480.0], [431.0, 1230.0], [428.0, 14534.333333333334], [418.0, 17948.0], [432.0, 2845.0], [434.0, 1268.0], [435.0, 2025.0], [441.0, 1854.0], [442.0, 1806.0], [443.0, 9444.0], [447.0, 11237.0], [446.0, 11708.5], [448.0, 9710.333333333334], [453.0, 4424.6], [457.0, 1750.0], [459.0, 1723.0], [454.0, 17459.0], [452.0, 13315.5], [449.0, 12774.333333333334], [466.0, 1278.5], [471.0, 3059.0], [472.0, 2211.0], [473.0, 2774.0], [469.0, 12254.0], [468.0, 12880.0], [482.0, 8228.0], [483.0, 2343.0], [484.0, 2755.0], [485.0, 11870.0], [487.0, 576.0], [480.0, 14357.0], [490.0, 2040.6666666666667], [493.0, 1977.6666666666667], [495.0, 8409.666666666666], [489.0, 11565.333333333334], [486.0, 15027.333333333334], [497.0, 448.0], [499.0, 1356.3333333333333], [504.0, 3540.0], [506.0, 2732.0], [507.0, 2912.0], [508.0, 12796.8], [502.0, 15841.0], [519.0, 4136.666666666666], [514.0, 1572.0], [512.0, 2972.5], [513.0, 10617.0], [518.0, 2823.5], [517.0, 10790.75], [520.0, 699.5], [523.0, 3683.0], [529.0, 3178.0], [539.0, 3092.0], [538.0, 11205.0], [540.0, 2359.3333333333335], [530.0, 1538.0], [533.0, 3064.0], [546.0, 1971.0], [545.0, 6449.666666666667], [548.0, 3024.5], [549.0, 8027.6], [555.0, 963.0], [556.0, 2954.0], [559.0, 1857.0], [560.0, 1864.0], [574.0, 7942.0], [572.0, 9016.0], [571.0, 9559.5], [551.0, 10567.0], [575.0, 2618.0], [561.0, 7605.5], [562.0, 5763.333333333333], [564.0, 2317.0], [567.0, 12300.0], [602.0, 2941.2], [577.0, 9348.625], [576.0, 3556.0], [581.0, 2573.0], [600.0, 8942.0], [586.0, 2466.0], [587.0, 14859.0], [593.0, 1251.0], [594.0, 927.0], [595.0, 2730.5], [599.0, 8609.0], [604.0, 3256.0], [606.0, 8744.0], [605.0, 10775.0], [609.0, 468.0], [608.0, 4057.0], [611.0, 9081.5], [612.0, 3533.0], [618.0, 640.5], [619.0, 2744.5], [622.0, 7397.142857142857], [620.0, 9041.5], [623.0, 3900.5], [624.0, 7878.333333333333], [639.0, 839.0], [633.0, 3514.0], [613.0, 10231.833333333334], [638.0, 1120.0], [625.0, 619.0], [630.0, 2724.0], [626.0, 13817.0], [647.0, 604.0], [640.0, 4173.0], [645.0, 1378.0], [646.0, 2930.5], [648.0, 528.0], [650.0, 13496.0], [652.0, 10524.666666666666], [656.0, 2912.0], [663.0, 5151.0], [668.0, 2113.0], [669.0, 6438.333333333333], [675.0, 4697.0], [672.0, 2827.0], [676.0, 2873.0], [677.0, 944.0], [681.0, 3283.0], [683.0, 872.5], [685.0, 952.5], [686.0, 770.5], [691.0, 1124.0], [695.0, 11013.25], [693.0, 8592.0], [703.0, 3029.5], [702.0, 10936.0], [700.0, 5751.5], [701.0, 2247.0], [696.0, 2980.5], [679.0, 7721.0], [698.0, 8630.0], [699.0, 1441.0], [716.0, 3343.0], [707.0, 4747.0], [709.0, 2076.0], [728.0, 7715.0], [711.0, 10083.5], [729.0, 819.0], [731.0, 1956.5], [734.0, 6692.5], [730.0, 5614.0], [712.0, 6692.333333333334], [713.0, 2639.0], [714.0, 3311.0], [717.0, 1062.0], [719.0, 4656.0], [704.0, 10179.625], [722.0, 5528.0], [723.0, 3283.6666666666665], [726.0, 484.0], [725.0, 11482.0], [761.0, 1333.3333333333333], [746.0, 2827.6666666666665], [744.0, 9921.0], [749.0, 6362.5], [753.0, 5474.666666666667], [767.0, 7173.0], [754.0, 875.0], [756.0, 5106.0], [760.0, 4301.0], [751.0, 7050.0], [736.0, 10724.0], [739.0, 8297.333333333334], [738.0, 9964.0], [743.0, 7318.0], [762.0, 1701.0], [765.0, 3933.0], [771.0, 2294.0], [769.0, 2697.0], [768.0, 2033.0], [770.0, 4039.0], [772.0, 2202.5], [775.0, 1421.0], [782.0, 1717.5], [779.0, 7645.0], [778.0, 7043.333333333333], [783.0, 5078.0], [784.0, 2209.0], [785.0, 5585.0], [792.0, 2984.0], [795.0, 8071.0], [797.0, 9992.75], [796.0, 9182.5], [798.0, 4379.0], [786.0, 3860.0], [787.0, 3642.0], [788.0, 4429.0], [789.0, 1962.0], [791.0, 2618.0], [801.0, 1457.0], [800.0, 4502.0], [804.0, 3928.0], [803.0, 7645.0], [805.0, 5056.0], [806.0, 2206.0], [807.0, 5887.5], [823.0, 5597.5], [822.0, 6568.0], [821.0, 10130.0], [831.0, 5646.0], [829.0, 8055.0], [828.0, 7004.0], [827.0, 7358.0], [809.0, 4153.0], [808.0, 7614.0], [812.0, 2775.5], [814.0, 5514.0], [813.0, 8675.0], [815.0, 2070.0], [856.0, 6825.714285714285], [847.0, 4023.0], [835.0, 3024.0], [833.0, 5480.0], [838.0, 5137.0], [841.0, 2992.0], [844.0, 7011.333333333333], [842.0, 10113.5], [851.0, 2951.6], [852.0, 3365.0], [853.0, 2525.0], [855.0, 2362.0], [857.0, 5093.0], [858.0, 4842.5], [862.0, 4894.333333333333], [861.0, 7190.5], [863.0, 7090.0], [888.0, 3194.0], [869.0, 2625.5], [870.0, 6773.0], [874.0, 6324.076923076922], [872.0, 6377.0], [875.0, 5411.0], [877.0, 3575.0], [876.0, 7252.0], [879.0, 5639.2], [864.0, 6426.5], [867.0, 4977.333333333333], [866.0, 8897.0], [878.0, 6277.0], [881.0, 4536.5], [882.0, 7878.0], [884.0, 5038.0], [887.0, 5776.0], [885.0, 5591.428571428571], [890.0, 5083.0], [889.0, 5059.75], [892.0, 4439.0], [893.0, 4902.4], [894.0, 5099.000000000001], [895.0, 2804.0], [923.0, 4021.6666666666665], [898.0, 6456.5], [899.0, 2256.5], [902.0, 5426.0], [920.0, 2241.75], [903.0, 2142.0], [922.0, 3521.0], [921.0, 3998.4838709677415], [908.0, 4247.136363636364], [907.0, 4373.285714285715], [905.0, 5070.25], [909.0, 3456.8333333333335], [911.0, 5356.0], [897.0, 5413.4], [896.0, 2991.0], [910.0, 3633.4545454545455], [912.0, 3988.0], [915.0, 4309.666666666666], [917.0, 4262.333333333333], [919.0, 5713.0], [924.0, 4172.0]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[584.9480000000009, 6060.901999999998]], "isOverall": false, "label": "14 Register Request-Aggregated", "isController": false}, {"data": [[10.0, 77.5], [16.0, 90.0], [19.0, 82.0], [20.0, 95.0], [21.0, 82.0], [31.0, 85.0], [33.0, 84.0], [39.0, 117.5], [38.0, 91.0], [41.0, 18148.0], [43.0, 18179.0], [45.0, 400.0], [47.0, 323.0], [49.0, 207.0], [61.0, 4264.2], [63.0, 204.0], [67.0, 356.5], [68.0, 221.0], [72.0, 17900.0], [78.0, 270.0], [83.0, 9770.5], [101.0, 9861.0], [111.0, 503.5], [110.0, 427.0], [108.0, 176.0], [115.0, 2328.75], [114.0, 5352.75], [113.0, 964.5], [119.0, 4475.375], [122.0, 2866.0], [121.0, 5918.571428571428], [120.0, 6438.0], [131.0, 4228.0], [129.0, 10543.999999999998], [128.0, 1820.8571428571427], [143.0, 6878.0], [139.0, 1116.0], [137.0, 7779.25], [146.0, 2485.0], [144.0, 7004.333333333333], [155.0, 1244.0], [152.0, 542.0], [175.0, 14592.0], [173.0, 11100.0], [172.0, 2799.875], [169.0, 17481.0], [168.0, 2508.5], [188.0, 16348.0], [198.0, 838.0], [196.0, 9215.153846153846], [192.0, 10816.0], [201.0, 814.0], [200.0, 7012.8], [211.0, 544.0], [213.0, 9137.0], [210.0, 8451.5], [209.0, 10420.25], [208.0, 18652.0], [216.0, 13865.833333333334], [224.0, 598.5], [239.0, 12885.0], [237.0, 5792.333333333334], [233.0, 13402.0], [242.0, 860.0], [247.0, 7889.583333333333], [253.0, 703.0], [251.0, 9945.0], [250.0, 593.0], [248.0, 18240.0], [270.0, 4065.0], [284.0, 3957.25], [282.0, 8361.312500000002], [277.0, 4973.666666666667], [293.0, 1102.0], [301.0, 1318.0], [296.0, 9080.5], [295.0, 4728.5], [304.0, 1415.0], [316.0, 1504.0], [319.0, 2225.0], [318.0, 1432.0], [309.0, 8923.25806451613], [308.0, 7282.666666666666], [305.0, 257.0], [326.0, 7975.625], [323.0, 6416.25], [341.0, 671.0], [342.0, 1596.0], [347.0, 5150.75], [344.0, 13260.666666666666], [365.0, 2021.0], [367.0, 906.0], [362.0, 12221.42857142857], [361.0, 11919.454545454546], [360.0, 9071.0], [357.0, 9299.0], [383.0, 8256.4], [382.0, 7042.2], [372.0, 13240.0], [371.0, 19221.5], [396.0, 2120.0], [384.0, 8573.333333333334], [415.0, 7269.166666666667], [410.0, 11939.8], [408.0, 9084.466666666667], [407.0, 17641.0], [404.0, 16506.0], [421.0, 1050.0], [428.0, 7344.374999999999], [422.0, 9950.0], [417.0, 13202.0], [416.0, 7730.666666666667], [432.0, 2568.0], [447.0, 2138.5], [446.0, 2365.5], [443.0, 2576.0], [448.0, 6510.833333333333], [455.0, 6261.0], [454.0, 8283.555555555555], [453.0, 7386.0], [466.0, 2635.0], [471.0, 2152.0], [469.0, 8473.666666666666], [468.0, 7876.933333333333], [483.0, 2784.0], [485.0, 1435.5], [495.0, 4776.0], [489.0, 9393.5], [486.0, 10708.6], [480.0, 7881.0], [508.0, 17495.0], [502.0, 7221.181818181818], [528.0, 3480.0], [539.0, 3657.0], [538.0, 6330.444444444444], [517.0, 14046.0], [513.0, 7404.0], [512.0, 6443.0], [572.0, 3687.0], [547.0, 3909.5], [549.0, 6684.0], [556.0, 2834.4285714285716], [554.0, 2319.0], [553.0, 7860.0], [552.0, 4546.0], [557.0, 3520.3333333333335], [560.0, 3740.0], [574.0, 7699.5], [571.0, 8361.3], [551.0, 8428.875], [567.0, 6237.470588235295], [562.0, 11004.0], [561.0, 7844.0], [599.0, 6578.888888888889], [602.0, 4747.0], [600.0, 6610.333333333333], [585.0, 16266.0], [583.0, 10405.25], [578.0, 7353.0], [577.0, 6430.7], [623.0, 8423.8], [637.0, 3127.0], [628.0, 12464.0], [627.0, 7114.0], [626.0, 8377.0], [624.0, 10178.0], [622.0, 8539.5], [613.0, 8010.590909090909], [656.0, 5404.0], [658.0, 765.0], [666.0, 4335.0], [668.0, 5110.0], [669.0, 13018.0], [664.0, 6186.5], [655.0, 5147.5], [653.0, 3024.3333333333335], [701.0, 7537.0], [683.0, 1030.0], [686.0, 3958.0], [687.0, 5184.0], [702.0, 6311.466666666668], [698.0, 6569.0], [674.0, 3701.0], [695.0, 6156.454545454546], [694.0, 1562.0], [693.0, 1135.6666666666667], [707.0, 6492.333333333334], [711.0, 6808.0], [706.0, 6172.0], [705.0, 14314.0], [704.0, 8867.70588235294], [724.0, 1759.0], [731.0, 4333.0], [730.0, 4960.0], [714.0, 10041.0], [712.0, 7213.0], [709.0, 3334.0], [767.0, 6883.0], [754.0, 6013.0], [758.0, 5566.333333333333], [764.0, 1776.5], [759.0, 10683.0], [753.0, 7869.4], [751.0, 10190.0], [744.0, 7627.8], [743.0, 5029.909090909091], [739.0, 8711.0], [737.0, 5300.0], [736.0, 6824.0], [783.0, 8432.0], [796.0, 7818.4], [779.0, 7151.5], [778.0, 6456.5], [797.0, 3735.333333333333], [795.0, 4804.25], [768.0, 3512.0], [791.0, 7005.333333333334], [785.0, 6957.5], [782.0, 3799.0], [780.0, 8109.75], [803.0, 5898.0], [805.0, 5648.0], [804.0, 4265.0], [808.0, 5893.714285714287], [812.0, 4038.5000000000005], [815.0, 11748.0], [800.0, 5767.333333333333], [828.0, 8211.0], [825.0, 4718.5], [824.0, 8507.0], [823.0, 9223.0], [819.0, 2916.6666666666665], [857.0, 6093.333333333333], [859.0, 2494.0], [847.0, 7151.0], [863.0, 8681.0], [862.0, 2861.3], [861.0, 7487.0], [858.0, 4653.5], [856.0, 7276.874999999999], [838.0, 4790.75], [844.0, 4202.625], [842.0, 11960.0], [892.0, 7851.0], [868.0, 7067.0], [866.0, 10025.0], [879.0, 6855.0], [878.0, 7162.0], [890.0, 9562.0], [888.0, 4122.0], [872.0, 4790.0], [875.0, 2536.0], [874.0, 5704.6], [876.0, 3915.0], [880.0, 2920.0], [882.0, 7706.333333333333], [881.0, 1843.0], [887.0, 3505.0], [885.0, 11040.0], [894.0, 7194.5], [893.0, 7230.666666666667], [903.0, 2448.0], [921.0, 6278.636363636363], [898.0, 8040.0], [922.0, 2751.0], [920.0, 4871.0], [910.0, 8022.333333333333], [897.0, 8072.0], [896.0, 8873.0], [909.0, 5753.0], [908.0, 7087.6], [902.0, 8935.5], [899.0, 3777.0]], "isOverall": false, "label": "15 Login Request", "isController": false}, {"data": [[501.8540000000002, 6899.5679999999975]], "isOverall": false, "label": "15 Login Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 927.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12774.966666666667, "minX": 1.7412915E12, "maxY": 14352.183333333332, "series": [{"data": [[1.7412915E12, 12774.966666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7412915E12, 14352.183333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7412915E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7.890000000000006, "minX": 1.7412915E12, "maxY": 6899.5679999999975, "series": [{"data": [[1.7412915E12, 7.890000000000006]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.7412915E12, 6060.901999999998]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.7412915E12, 6899.5679999999975]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7412915E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7.878000000000011, "minX": 1.7412915E12, "maxY": 6899.556999999996, "series": [{"data": [[1.7412915E12, 7.878000000000011]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.7412915E12, 6060.876000000006]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.7412915E12, 6899.556999999996]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7412915E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7412915E12, "maxY": 1.6710000000000038, "series": [{"data": [[1.7412915E12, 0.0]], "isOverall": false, "label": "16 Get Stock Prices Request", "isController": false}, {"data": [[1.7412915E12, 1.6710000000000038]], "isOverall": false, "label": "14 Register Request", "isController": false}, {"data": [[1.7412915E12, 0.0]], "isOverall": false, "label": "15 Login Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7412915E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 75.0, "minX": 1.7412915E12, "maxY": 21934.0, "series": [{"data": [[1.7412915E12, 21934.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7412915E12, 75.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7412915E12, 15061.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7412915E12, 19834.18]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7412915E12, 4780.5]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7412915E12, 17054.9]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7412915E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 25.0, "maxY": 14335.0, "series": [{"data": [[134.0, 6957.5], [130.0, 7346.0], [135.0, 9016.0], [142.0, 8815.0], [152.0, 12817.0], [155.0, 727.0], [165.0, 7537.0], [164.0, 10386.5], [170.0, 11223.0], [45.0, 480.0], [188.0, 9083.0], [50.0, 1722.5], [212.0, 14335.0], [63.0, 2160.5], [64.0, 2086.0], [68.0, 878.0], [71.0, 4018.0], [79.0, 5819.5], [81.0, 2618.0], [87.0, 2985.5], [89.0, 4563.0], [88.0, 5911.0], [25.0, 82.0], [116.0, 6345.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[134.0, 5.0], [130.0, 5.0], [135.0, 4.0], [142.0, 6.0], [152.0, 4.0], [155.0, 6.0], [165.0, 6.0], [164.0, 6.5], [170.0, 4.0], [188.0, 5.0], [50.0, 8.0], [212.0, 5.0], [63.0, 6.0], [64.0, 7.0], [68.0, 11.0], [71.0, 6.0], [79.0, 4.0], [81.0, 6.0], [87.0, 8.0], [89.0, 6.0], [88.0, 4.5], [25.0, 4.0], [116.0, 5.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 4.0, "minX": 25.0, "maxY": 14335.0, "series": [{"data": [[134.0, 6957.5], [130.0, 7346.0], [135.0, 9016.0], [142.0, 8815.0], [152.0, 12817.0], [155.0, 727.0], [165.0, 7537.0], [164.0, 10386.5], [170.0, 11223.0], [45.0, 480.0], [188.0, 9083.0], [50.0, 1722.5], [212.0, 14335.0], [63.0, 2160.5], [64.0, 2086.0], [68.0, 878.0], [71.0, 4018.0], [79.0, 5819.0], [81.0, 2618.0], [87.0, 2985.5], [89.0, 4563.0], [88.0, 5910.5], [25.0, 82.0], [116.0, 6345.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[134.0, 5.0], [130.0, 5.0], [135.0, 4.0], [142.0, 6.0], [152.0, 4.0], [155.0, 6.0], [165.0, 6.0], [164.0, 6.5], [170.0, 4.0], [188.0, 5.0], [50.0, 8.0], [212.0, 5.0], [63.0, 6.0], [64.0, 7.0], [68.0, 11.0], [71.0, 6.0], [79.0, 4.0], [81.0, 6.0], [87.0, 8.0], [89.0, 6.0], [88.0, 4.5], [25.0, 4.0], [116.0, 5.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 212.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.0, "minX": 1.7412915E12, "maxY": 50.0, "series": [{"data": [[1.7412915E12, 50.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7412915E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.7412915E12, "maxY": 33.333333333333336, "series": [{"data": [[1.7412915E12, 33.333333333333336]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7412915E12, 16.666666666666668]], "isOverall": false, "label": "400", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7412915E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.7412915E12, "maxY": 16.666666666666668, "series": [{"data": [[1.7412915E12, 16.666666666666668]], "isOverall": false, "label": "16 Get Stock Prices Request-failure", "isController": false}, {"data": [[1.7412915E12, 16.666666666666668]], "isOverall": false, "label": "14 Register Request-success", "isController": false}, {"data": [[1.7412915E12, 16.666666666666668]], "isOverall": false, "label": "15 Login Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7412915E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 16.666666666666668, "minX": 1.7412915E12, "maxY": 33.333333333333336, "series": [{"data": [[1.7412915E12, 33.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7412915E12, 16.666666666666668]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7412915E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

